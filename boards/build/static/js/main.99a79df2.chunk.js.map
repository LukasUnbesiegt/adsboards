{"version":3,"sources":["components/schedules/groupDate/index.module.css","components/navigation/sidebar/sidebar.module.css","components/misc/forms/editor/Editor.module.css","routes.module.css","components/misc/Loading/LoadingComponent.module.css","components/misc/Loading/LoadingIcon/LoadingIcon.module.css","components/ads/chat/MessageBox/MessageBox.module.css","components/ads/chat/index.module.css","components/schedules/index.module.css","components/landing/Hero/Hero.module.css","components/ads/chat/ChatLists/ChatLists.module.css","components/misc/table/Table.module.css","actions/types.js","reducers/userReducer.js","reducers/errorsReducer.js","reducers/asyncReducer.js","components/misc/modalManager/modalReducer.js","components/misc/modalManager/modalConstants.js","reducers/boardsReducer.js","reducers/ownersReducer.js","reducers/schedulesReducer.js","store.js","reducers/index.js","services/authService.js","config.js","services/axiosService.js","actions/userActions.js","components/misc/Loading/LoadingIcon/LoadingIcon.js","components/misc/Loading/LoadingComponent.js","components/misc/auth/Authenticated.js","components/misc/modalManager/modalManager.js","components/navigation/sidebar/navitems.js","components/navigation/collapse/collapse.js","components/navigation/sidebar/index.js","actions/boards/boards.js","components/landing/Hero/Hero.js","components/landing/Home.js","components/misc/forms/inputs/TextInput.js","components/misc/forms/editor/Editor.js","components/misc/ProductPhotos/ProductPhotos.js","components/spots/create/Form/Maps.js","components/spots/create/Form/targets.js","components/spots/create/Form/Form.js","utils/isEmpty.js","components/spots/create/index.js","components/misc/table/Table.js","components/misc/pagination/Pagination.js","components/spots/all/index.js","components/spots/index.js","components/ads/index.js","components/misc/forms/inputs/TextArea.js","components/profile/company/Form/emails.js","components/profile/company/Form/phones.js","components/profile/company/Form/Form.js","components/profile/company/index.js","components/profile/account/Form/Form.js","components/profile/account/incomes/index.js","components/profile/account/index.js","components/ads/chat/MessageBox/Form.js","components/ads/chat/MessageBox/MessageBox.js","components/ads/chat/ChatLists/ChatLists.js","components/ads/chat/index.js","components/schedules/today/index.js","components/misc/forms/inputs/SelectInputWO.js","actions/schedules.js","components/schedules/groupDate/index.js","components/schedules/groupBoard/index.js","components/schedules/index.js","routes.js","services/ga/ga.js","index.js"],"names":["module","exports","dateSpan","borderLine","sidebarlink","editor","editorwrapper","sidebar","navbarColor","iconBullet","wrapper","ldsHourglass","messageBoxWrapper","ChatBoxWrapper","totalSpan","heroWrapper","headerText","headerParagraph","ListsWrapper","container","darker","imgRight","timeRight","timeLeft","tableStyle","AUTH_USER","GET_ERRORS","initialState","userReducer","state","arguments","length","undefined","action","type","Object","objectSpread","register","payload","loginSuccess","userData","errorsReducer","_ref","error","loading","asyncReducer","modalReducer","_action$payload","modalType","modalProps","boardsReducer","board","boards","requests","schedule","ownersReducer","owner","schedulesReducer","schedules","today","history","createBrowserHistory","configureStore","preloadedState","middlewares","Thunk","PromiseMiddleware","routerMiddleware","storeEnhancers","applyMiddleware","apply","responsiveStoreEnhancer","composedEnhancer","composeWithDevTools","store","createStore","combineReducers","router","connectRouter","form","formReducer","user","async","modal","errors","browser","responsiveStateReducer","toastr","toastrReducer","authService","tokenKey","cartId","localStorage","getItem","this","token","setItem","removeItem","prodEndpoint","URL","concat","axiosService","AxiosService","classCallCheck","axiosInstance","initInstance","axios","create","baseURL","withCredentials","interceptors","request","use","config","headers","Authorization","getInstance","isRoomExist","id","callback","dispatch","get","then","response","data","auth","reload","_ref3","asyncToGenerator","regenerator_default","a","mark","_callee3","wrap","_context3","prev","next","sent","console","log","t0","stop","_x3","LoadingIcon","react_default","createElement","className","styles","LoadingComponent","modalArrays","connect","currentModal","renderModal","ModalWeWant","find","name","ModalComponent","navitems","icon","linkTo","admin","dropdowns","links","Term","collapse","correctLinks","renderNavbarLinks","_this$props","_this","props","changeStyle","i","item","map","link","key","react_router_dom","to","style","fontSize","setState","_this2","_this$props2","react","onClick","toggle","reactstrap_es","isOpen","Component","SideBar","navItems","renderNavItems","getAdsRequested","ownerId","post","catch","err","getOwner","getBoards","filters","page","Hero","doc","componentDidMount","renderHero","Home","landing_Hero_Hero","TextInput","input","placeholder","prepend","logo","styleFrom","_ref$meta","meta","touched","assign","color","EditorComponent","possibleConstructorReturn","getPrototypeOf","call","onEditorStateChange","editorState","html","content","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","description","react_draft_wysiwyg","wrapperClassName","editorClassName","onChange","htmlContents","draftToHtml","convertToRaw","getCurrentContent","ProductPhotos","files","image","fieldName","filesCropped","images","componentWillReceiveProps","prevProps","initialImages","toConsumableArray","onDrop","fileName","cropImage","refs","cropper","getCroppedCanvas","toBlob","blob","imgUrl","createObjectURL","cropResult","loadImages","photosArr","tempurl","cancelCrop","removeImg","filteredFilesCropped","filter","filecrop","uploadPhotos","blobs","file","info","sendImages","previousState","currentProps","results","success","deleteImage","imageId","productId","deleteOriginalImg","filteredImages","public_id","warning","renderUploadedImages","height","width","objectFit","src","url","alt","dist_es","multiple","paddingTop","textAlign","react_cropper_default","ref","preview","aspectRatio","upper","lower","viewMode","dragMode","guides","scalable","cropBoxMovable","cropBoxResizable","crop","role","class","display","justifyContent","flexWrap","margin","cursor","mapDispatchToProps","formData","FormData","append","AnyReactComponent","text","Maps","lat","coordinates","lng","handleClick","e","changeLatLng","backgroundColor","google_map_react_lib_default","bootstrapURLKeys","defaultCenter","center","defaultZoom","zoom","Maps_AnyReactComponent","FieldArrayComponent","FieldArray","component","fields","listStyle","push","backgroundImage","member","index","close","remove","Field","reduxForm","validate","values","size","price","normal","promo","handleSubmit","submitCallBack","selectRegion","selectCountry","country","region","changeLatLngHandler","initialValues","onSubmit","targets","Editor","rcrs_es","value","val","classes","showDefaultOption","Form_Maps","location","Photos","photos","isEmpty","keys","trim","getTotalIncomes","arr","amount","reduce","accumulator","currentValue","componentWillUnmount","clearForm","latlngHandler","submitHandler","population","editBoard","_id","createBoard","create_Form_Form","actionType","boardId","TableComp","dropdownOpen","prevState","productEditHandler","editHandler","deletingHandler","deleteHandler","productViewHandler","viewHandler","renderTableHeads","tableheads","head","renderTableRows","rows","selectedRowItems","handlers","editStyle","row","href","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","handler","func","renderActionsHandler","renderTable","hover","bordered","responsive","PaginationComp","lastPage","hasNextPage","hasPreviousPage","currentPage","items","isActiveColor","submitCallback","aria-label","previous","Array","from","isActive","renderPagination","_editHandler","getSingleBoard","_deleteHandler","deleteBoard","_viewHandler","alert","_lockHandler","lockBoard","momentDate","moment","createdAt","format","locked","company","Pagination","Table","index_es","pills","react_router","exact","path","All","Create","inputChangeHandler","persist","target","isNull","renderSchedules","momentStart","momentEnd","requestDate","fromNow","advert","acceptRequest","rejectRequest","advertiser","diff","redirectToChat","borderRadius","searchAdsRequested","TextArea","Form","emails","phones","dataTosend","address","line1","line2","stripe","phone","email","createProfile","company_Form_Form","getTotalIncomeFromInvoices","invoices","renderInvoices","invoice","editUser","username","account_Form_Form","incomes","MessageBox","currentUser","currentRoom","sendMessage","MessageBox_Form","ChatLists","renderMessages","messages","message","senderId","updatedAt","isLoading","connectToRoom","subscribeToRoom","roomId","messageLimit","hooks","onMessage","connectToChat","exist","addUserToRoom","userId","createRoom","room","chat_ChatLists_ChatLists","chat_MessageBox_MessageBox","tokenProvider","Chatkit","TokenProvider","ChatManager","instanceLocator","connectionTimeout","reset","renderTodayAds","todaySchedules","note","Date","now","SelectInput","options","title","option","renderAdvertLists","renderAdvert","toArr","prop","arrTo","group","onGroupChange","getSchedulesBy","boardSchedules","groupBoard","dateSchedules","groupDate","renderGroupedSchedules","SelectInputWO","totalItems","actor","Routes","direction","window","ga","onMouseEnter","onMouseLeave","changeWidth","changeDirection","logoutUser","renderSettingBar","setTimeout","nav","renderMainContents","sidebarWidth","topbarWidth","iconDirection","modalManager","render","landing_Home","spots","ads","chat","components_schedules","account","react_messenger_customer_chat_lib_default","pageId","appId","htmlRef","renderUnAuthenticated","pathname","ga_this","setPageAndSendToGA","search","trackGoogleAnalytics","isAuth","React","deleteToken","withRouter","ReactDOM","es","esm","lib_default","position","transitionIn","transitionOut","routes","document","getElementById"],"mappings":"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","file":"static/js/main.99a79df2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dateSpan\":\"groupDate_dateSpan__lTfzd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderLine\":\"sidebar_borderLine__1s9wK\",\"sidebarlink\":\"sidebar_sidebarlink___FbBR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"Editor_editor__2lBIy\",\"editorwrapper\":\"Editor_editorwrapper__3N9Eu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"routes_sidebar__2swop\",\"navbarColor\":\"routes_navbarColor__p5x7q\",\"iconBullet\":\"routes_iconBullet__1SjXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoadingComponent_wrapper__1bc64\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsHourglass\":\"LoadingIcon_ldsHourglass__35SIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageBoxWrapper\":\"MessageBox_messageBoxWrapper__3Qt55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatBoxWrapper\":\"chat_ChatBoxWrapper__2cZgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"totalSpan\":\"schedules_totalSpan__gIX5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heroWrapper\":\"Hero_heroWrapper__1gEg_\",\"headerText\":\"Hero_headerText__1ca0z\",\"headerParagraph\":\"Hero_headerParagraph__DV9xZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListsWrapper\":\"ChatLists_ListsWrapper__2QOV7\",\"container\":\"ChatLists_container__2g6w2\",\"darker\":\"ChatLists_darker__C-t4w\",\"imgRight\":\"ChatLists_imgRight__39_jb\",\"timeRight\":\"ChatLists_timeRight__1RGUD\",\"timeLeft\":\"ChatLists_timeLeft__3WhRy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableStyle\":\"Table_tableStyle__37Usl\"};","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const LOGOUT_USER = 'logout_user';\nexport const AUTH_USER = 'auth_user';\nexport const ASYNC_ACTION_START = \"ASYNC_ACTION_START\";\nexport const ASYNC_ACTION_FINISH = \"ASYNC_ACTION_FINISH\"\nexport const ASYNC_ACTION_ERROR = \"ASYNC_ACTION_ERROR\"\nexport const LOCALE_SET = 'LOCALE_SET';\nexport const GET_ERRORS = 'GET_ERRORS'\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\n\n\n\nexport const GET_SINGLE_OWNER = 'GET_SINGLE_OWNER'\nexport const GET_SINGLE_BOARD = 'GET_SINGLE_BOARD'\nexport const GET_BOARDS = 'GET_BOARDS'\nexport const BOARDS_WITH_ADS = 'BOARDS_WITH_ADS'\nexport const GET_SCHEDULE_FOR_CHAT = 'GET_SCHEDULE_FOR_CHAT'\nexport const SCHEDULES_BY = 'SCHEDULES_BY'\nexport const TODAY_SCHEDULES = 'TODAY_SCHEDULES'","import {LOGIN_USER , REGISTER_USER , AUTH_USER , LOGOUT_USER} from '../actions/types'\n\nconst initialState = {\n\n};\n\n\nexport default (state = initialState, action) => {\n  \n  \n \n  \n    switch (action.type) {\n\n       case REGISTER_USER:\n      return { ...state , register : action.payload }\n        \n      case LOGIN_USER : \n      return {...state , loginSuccess : action.payload}\n    \n      case AUTH_USER :\n      return {...state , userData : action.payload}\n      case LOGOUT_USER:\n      return {...state }\n      \n    default:\n        return state\n  }\n}\n","\nimport { GET_ERRORS, CLEAR_ERRORS } from '../actions/types'\nconst initialState = {\n\n}\n\nexport default (state = initialState, { type, payload }) => {\n\n\n\n    switch (type) {\n\n        case GET_ERRORS:\n            return { ...state, error: payload }\n            break;\n        case CLEAR_ERRORS:\n            return {}\n\n        default:\n            return state\n    }\n}\n","\nimport {ASYNC_ACTION_START , ASYNC_ACTION_FINISH , ASYNC_ACTION_ERROR} from '../actions/types'\n\nconst initialState = {\n    loading : false \n}\n\n\n\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n\n   case ASYNC_ACTION_START:\n             return {...state , loading : true }\n             break;\n\n   case ASYNC_ACTION_FINISH:\n             return {...state , loading : false }\n             break;\n   case ASYNC_ACTION_ERROR:\n             return {...state , loading : false }\n             break;\n\n  default:\n    return state\n  }\n}\n\n// export const asyncActionStarted = (state , payload) => {\n//    \n// }\n\n// export const asyncActionFinished = (state) => {\n//     return {...state , loading : false }\n// }\n\n// export const asyncActionError = (state) => {\n//     return {...state , loading : false }\n// }\n\n// export default createReducer(initialState , {\n//     [ASYNC_ACTION_START] : asyncActionStarted ,\n//     [ASYNC_ACTION_FINISH] : asyncActionFinished ,\n//     [ASYNC_ACTION_ERROR] : asyncActionError \n\n// })","import {MODAL_OPEN , MODAL_CLOSE} from './modalConstants'\n\nconst initialState = null ;\n\nexport default (state = initialState, action) => {\n  \n  \n  \n    switch (action.type) {\n\n    case MODAL_OPEN:\n        const {modalType , modalProps} = action.payload;\n            return {modalType , modalProps}\n                break;\n\n    case MODAL_CLOSE :\n            return null \n                 break;\n\n\n  default:\n    return state\n  }\n}\n","export const MODAL_OPEN = 'MODAL_OPEN';\nexport const MODAL_CLOSE = 'MODAL_CLOSE'","import { GET_SINGLE_BOARD, GET_BOARDS, BOARDS_WITH_ADS, GET_SCHEDULE_FOR_CHAT } from '../actions/types'\n\n\n\nexport default (state = {}, action) => {\n\n\n\n    switch (action.type) {\n\n        case GET_SINGLE_BOARD:\n            return { ...state, board: action.payload }\n\n        case GET_BOARDS:\n            return { ...state, boards: action.payload }\n\n        case BOARDS_WITH_ADS:\n            return { ...state, requests: action.payload }\n\n        case GET_SCHEDULE_FOR_CHAT:\n            return { ...state, schedule: action.payload }\n\n        default:\n            return state\n    }\n}\n","import { GET_SINGLE_OWNER } from '../actions/types'\n\n\n\nexport default (state = {}, action) => {\n\n\n\n    switch (action.type) {\n\n        case GET_SINGLE_OWNER:\n            return { ...state, owner: action.payload }\n\n\n\n        default:\n            return state\n    }\n}\n","import { SCHEDULES_BY, TODAY_SCHEDULES } from '../actions/types'\n\nconst initialState = {\n\n};\n\n\nexport default (state = initialState, action) => {\n\n\n\n\n    switch (action.type) {\n\n        case SCHEDULES_BY:\n            return { ...state, schedules: action.payload }\n\n        case TODAY_SCHEDULES:\n            return { ...state, today: action.payload }\n        default:\n            return state\n    }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport { reducers } from './reducers/index'\nimport Thunk from 'redux-thunk'\nimport PromiseMiddleware from 'redux-promise'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router'\nimport { responsiveStoreEnhancer } from 'redux-responsive'\n\n\nconst history = createBrowserHistory()\n\n\nexport const configureStore = (preloadedState) => {\n\n  const middlewares = [Thunk, PromiseMiddleware, routerMiddleware(history)];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  const storeEnhancers = [middlewareEnhancer, responsiveStoreEnhancer];\n\n  const composedEnhancer = composeWithDevTools(\n    ...storeEnhancers\n  );\n\n  const store = createStore(\n    reducers(history),\n    preloadedState,\n    composedEnhancer\n  )\n\n\n\n  return {\n    store: store,\n    history: history\n  };\n}","import { combineReducers } from 'redux'\nimport { reducer as formReducer } from 'redux-form';\nimport userReducer from './userReducer'\nimport errors from './errorsReducer'\nimport localeReducer from './localeReducer'\nimport { responsiveStateReducer } from 'redux-responsive'\nimport asyncReducer from './asyncReducer';\nimport modalReducer from '../components/misc/modalManager/modalReducer'\nimport errorsReducer from './errorsReducer';\nimport { connectRouter } from 'connected-react-router'\nimport { reducer as toastrReducer } from 'react-redux-toastr'\nimport boardsReducer from './boardsReducer'\nimport ownersReducer from './ownersReducer'\nimport schedulesReducer from './schedulesReducer'\n\n\nexport const reducers = (history) => combineReducers({\n        router: connectRouter(history),\n        form: formReducer,\n        user: userReducer,\n        async: asyncReducer,\n        modal: modalReducer,\n        errors: errorsReducer,\n        browser: responsiveStateReducer,\n        toastr: toastrReducer,\n        board: boardsReducer,\n        owner: ownersReducer,\n        schedules: schedulesReducer\n})\n","class AuthService {\n\n    tokenKey = 'auth_token';\n    cartId = 'cart_id';\n\n\n    getToken() {\n        localStorage.getItem(this.tokenKey)\n    }\n\n\n    getCartToken() {\n        localStorage.getItem(this.cartId)\n\n    }\n\n    setCartToken(token) {\n        localStorage.setItem(this.cartId, token)\n    }\n    setToken(token) {\n        localStorage.setItem(this.tokenKey, token)\n    }\n\n    deleteToken() {\n\n        localStorage.removeItem(this.tokenKey)\n    }\n\n\n\n}\n\n\nexport default new AuthService();","export const endpoint = `http://localhost:5000/`;\nexport const prodEndpoint = `https://spotads.herokuapp.com/`;\nexport const FB_APP_ID = ``","import axios from 'axios';\nimport authService from './authService'\nimport { endpoint, prodEndpoint } from '../config'\n\nconst URL = process.env.NODE_ENV === 'development' ? `${endpoint}api/v1` : `${prodEndpoint}api/v1`\n\n// Creating axios class which we will use for every private request\nclass AxiosService {\n\n    axiosInstance = {}\n\n    constructor() {\n        this.initInstance()\n    }\n\n\n    initInstance() {\n\n        // creating axios instance with \n        // creditials included - base url is our server URL\n        this.axiosInstance = axios.create({\n\n            baseURL: URL,\n            withCredentials: 'include',\n\n        })\n\n        this.axiosInstance.interceptors.request.use(\n\n            (config) => {\n                // get token to set 'Authorization' header for send back to server\n                const token = localStorage.getItem('auth_token')\n\n                if (token) {\n                    // setting token as Authorization for use of server middleware called 'auth'\n                    config.headers.Authorization = `${token}`\n                }\n                return config\n            }\n        )\n\n        return this.axiosInstance;\n    }\n    getInstance() {\n\n        return this.axiosInstance || this.initInstance()\n\n    }\n\n}\n\n\n\n\n\nexport default new AxiosService();","\nimport { LOGIN_USER, AUTH_USER, REGISTER_USER, USER_SERVER, LOGOUT_USER, GET_ERRORS } from './types'\nimport authService from '../services/authService'\nimport axiosService from '../services/axiosService'\nimport { asyncActionStart, asyncActionFinish, asyncActionError } from './asyncActions'\nimport toastr from 'react-redux-toastr'\nimport { reset } from 'redux-form'\nimport Chatkit from \"@pusher/chatkit-client\";\n\n\nimport axios from 'axios'\n\nimport { endpoint, prodEndpoint } from '../config'\n\nconst URL = process.env.NODE_ENV === 'development' ? endpoint : prodEndpoint\nconst axiosInstance = axiosService.getInstance();\n\n\n\n\nexport function registerUser(dataToSubmit) {\n  //   const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n  //       .then(response => response.data);\n\n  //   return {\n  //       type: REGISTER_USER,\n  //       payload: request\n  //   }\n}\n\n\n\nexport const isRoomExist = (id, callback) => {\n\n\n  return (dispatch) => {\n\n\n    axiosInstance.get(`/chats/rooms/${id}`)\n      .then((response) => {\n\n        callback(response.data)\n\n      })\n\n\n\n  }\n\n}\n\nexport const sendMessage = (currentUser, currentRoom, data) => {\n\n  console.log('currentUser', currentUser)\n  console.log('currentRoom', currentRoom)\n  console.log('message', data.message)\n\n  return (dispatch) => {\n\n    currentUser.sendMessage({\n      text: data.message,\n      roomId: `${currentRoom.id}`\n    });\n    dispatch(reset('create-message'))\n\n  }\n\n\n\n\n}\n\nexport const connectToChat = (user, id, callback) => {\n\n  return (dispatch) => {\n\n    axiosInstance.post(`/chats/users`, { user })\n      .then(() => {\n\n        const tokenProvider = new Chatkit.TokenProvider({\n          url: `${URL}api/v1/chats/authenticate`\n        });\n\n        const chatManager = new Chatkit.ChatManager({\n          instanceLocator: \"v1:us1:bb5df3cd-5dc0-47a0-af60-dc0e87479b25\",\n          userId: user.id,\n          tokenProvider,\n          connectionTimeout: 20000\n        });\n\n        return chatManager.connect().then(currentUser => {\n          dispatch(isRoomExist(id, (exist) => {\n            callback(currentUser, exist)\n          }))\n\n\n        });\n\n      })\n\n  }\n\n\n\n}\n\n\n\n\n\nexport function loginUser(dataToSubmit, history) {\n\n  // dataToSubmit - user object we submit in form \n  // history - react-router-history\n\n  return async (dispatch) => {\n\n\n    try {\n\n\n      dispatch(asyncActionStart())\n\n      // HERE we call 'api/v1/users/login' api endpoint with POST request. \n      const response = await axios.post(`${URL}api/v1/users/login`, dataToSubmit);\n\n      if (response.data.success) {\n\n        // we set token in localStrage as 'auth_token' name\n        await authService.setToken(response.data.token)\n\n        // now\n        history.push('/admin')\n        dispatch(asyncActionFinish())\n      } else {\n        dispatch({\n          type: GET_ERRORS,\n          payload: response.data.message\n        })\n      }\n\n\n    } catch (error) {\n\n\n    }\n\n\n\n  }\n\n\n\n\n\n}\nexport function fbLogin(dataToSubmit, history) {\n\n\n\n  return async (dispatch) => {\n\n    try {\n      dispatch(asyncActionStart())\n      const response = await axios.post(`${URL}api/v1/users/fblogin`, dataToSubmit);\n\n      if (response) {\n        console.log(response.data.token);\n        await authService.setToken(response.data.token)\n\n        history.push('/user')\n        dispatch(asyncActionFinish())\n      }\n\n\n    } catch (error) {\n      console.log(error)\n    }\n\n\n\n  }\n\n\n\n\n\n}\n\nexport function auth(history, reload) {\n\n\n\n  return async (dispatch) => {\n\n\n    try {\n\n\n      const userData = await axiosInstance.get('/owners/auth');\n\n\n      dispatch({\n        type: AUTH_USER,\n        payload: userData.data\n      })\n\n      console.log(userData)\n      //kick user out\n\n\n    } catch (error) {\n      console.log(error)\n    }\n\n  }\n\n\n}\n\nexport const logoutUser = (history) => dispatch => {\n\n  authService.deleteToken()\n\n  const REDIRECT_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : 'https://www.spotads.live'\n  window.location.assign(REDIRECT_URL);\n\n\n\n};\n\n\n","import React from 'react'\nimport styles from './LoadingIcon.module.css'\n\n\n\nexport default function LoadingIcon() {\n    return (\n        <div className={`${styles.ldsHourglass}`}></div >\n    )\n}\n","import React from 'react'\nimport styles from './LoadingComponent.module.css'\n\nimport LoadingIcon from './LoadingIcon/LoadingIcon'\n\n\n\nexport default function LoadingComponent() {\n\n\n\n\n    return (\n        <div\n            className={`${styles.wrapper}`}\n        >\n            <LoadingIcon />\n        </div>\n    )\n}\n","\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { auth } from '../../../actions/userActions';\nimport { withRouter } from 'react-router-dom'\nimport Loading from '../Loading/LoadingComponent'\n\n\n\nexport default function (ComposedClass, reload, adminRoute = null) {\n\n\n    class AuthenticationCheck extends Component {\n\n\n\n        componentDidMount() {\n\n\n            this.props.auth(this.props.history, reload, adminRoute);\n\n\n        }\n\n        render() {\n\n\n            if (!this.props.async.loading) {\n\n                return (\n                    <ComposedClass {...this.props} user={this.props.user.userData} browser={this.props.browser} site={this.props.site.site} />\n                );\n            } else {\n                return (\n                    <Loading />\n                )\n            }\n\n\n\n\n\n\n\n        }\n    }\n\n\n    const mapStateToProps = (state) => ({\n        user: state.user,\n        async: state.async,\n        browser: state.browser,\n        site: state.site\n    })\n\n    const mapDispatchToProps = {\n        auth\n    }\n\n\n\n\n    return connect(mapStateToProps, mapDispatchToProps)(AuthenticationCheck)\n}\n\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\n\n\n\n// import Modal Components you want in below arrays and use it from here\n\nconst modalArrays = [];\n\n\nconst mapState = (state) => ({\n    currentModal: state.modal\n})\n\n\nconst ModalManager = ({ currentModal }) => {\n\n    let renderModal;\n\n    if (currentModal) {\n        const { modalType, modalProps } = currentModal;\n\n        const ModalWeWant = modalArrays.find((modal) => {\n            return modal.name = modalType\n        })\n        console.log(ModalWeWant);\n        const ModalComponent = ModalWeWant.modal;\n\n        renderModal = <ModalComponent {...modalProps} />;\n\n    }\n\n\n\n\n    return (\n        <span>\n            {renderModal}\n        </span>\n\n    )\n}\n\n\n\n\n\nexport default connect(mapState)(ModalManager);","\nexport const navitems = [\n\n\n    {\n        name: 'boards',\n        icon: 'fa-tv',\n        linkTo: '/spots',\n        admin: false,\n        dropdowns: false,\n\n    },\n    {\n        name: 'ads requests',\n        icon: 'fa-ad',\n        linkTo: '/ads',\n        admin: false,\n        dropdowns: false,\n\n    },\n\n    {\n        name: 'schedules',\n        icon: 'fa-calendar-check',\n        linkTo: '/schedules',\n        admin: false,\n        dropdowns: false,\n\n    },\n\n    {\n        name: 'agency',\n        icon: 'fa-id-card',\n        admin: false,\n        dropdowns: true,\n        links: [\n            {\n                name: 'profile',\n                linkTo: '/profile'\n            },\n\n            {\n                name: 'account ',\n                linkTo: '/account'\n            },\n\n\n        ]\n\n    }\n\n\n\n\n\n\n\n\n\n]","import React, { Component, Fragment } from 'react'\nimport { ListGroup, ListGroupItem, Collapse } from 'reactstrap';\nimport { NavLink } from 'react-router-dom'\n\n\n\nclass Term extends Component {\n\n\n    state = {\n        collapse: false,\n        correctLinks: []\n    }\n\n    toggle() {\n        this.setState({ collapse: !this.state.collapse });\n    }\n\n\n    renderNavbarLinks = (links) => {\n        const { i, item, changeStyle, sidebarlink } = this.props;\n\n        return links.map((link, i) => {\n\n            return (\n                <li className=\"\" key={i}>\n                    <NavLink className={`nav-link text-white p-3 mb-2  ${sidebarlink} `}\n\n                        to={link.linkTo}\n                    >\n\n                        <span\n                            style={{\n                                fontSize: '12px'\n                            }}\n                        >\n                            {\n                                changeStyle ? '' : `${link.name}`\n                            }\n\n\n\n                        </span>\n\n                    </NavLink>\n\n                </li>\n            )\n\n\n        })\n\n\n    }\n\n\n\n\n    render() {\n\n        const { i, item, changeStyle, sidebarlink } = this.props;\n\n\n\n        return (\n\n\n            <Fragment>\n\n\n                <li className=\"\" key={i}>\n                    <a className={`nav-link text-white p-3 mb-2  ${sidebarlink} `}\n\n                        onClick={() => { this.toggle() }}\n                    >\n                        <i className={`fa ${item.icon} fa-lg`}></i>\n                        <span\n                            style={{\n                                fontSize: '12px'\n                            }}\n                        >\n                            {\n                                changeStyle ? '' : `${item.name}`\n                            }\n\n                            {item.dropdowns && !changeStyle && (<i className=\"ni ni-bold-down ml-2\"></i>)}\n\n                        </span>\n\n                    </a>\n\n                </li>\n\n\n                <Collapse isOpen={this.state.collapse}>\n\n                    <div className=\"container my-3 py-3\">\n\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                {\n                                    this.renderNavbarLinks(item.links)\n                                }\n\n\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </Collapse>\n            </Fragment>\n\n\n        )\n    }\n}\n\n\n\n\nexport default Term;","\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { navitems } from './navitems'\nimport { NavLink } from 'react-router-dom'\nimport styles from './sidebar.module.css'\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport Collapse from '../collapse/collapse'\n\n\nclass SideBar extends Component {\n\n\n\n\n\n\n\n\n\n\n\n    render() {\n\n\n\n\n\n        const renderNavItems = () => {\n\n\n            const navItems = navitems.map((item, i) => {\n\n\n\n\n\n\n\n                return (\n                    <Fragment>\n\n                        {\n                            item.dropdowns ? <Collapse\n                                i={i}\n                                item={item}\n                                sidebarlink={styles.sidebarlink}\n                                changeStyle={this.props.changeStyle}\n\n                            /> : (\n                                    <li className=\"\" key={i}>\n                                        <NavLink className={`nav-link text-white p-3 mb-2  ${styles.sidebarlink} `}\n\n                                            to={item.linkTo}\n                                        >\n                                            <i className={`fa ${item.icon} fa-lg`}></i>\n                                            <span\n                                                style={{\n                                                    fontSize: '12px'\n                                                }}\n                                            >\n                                                {\n                                                    this.props.changeStyle ? '' : `${item.name}`\n                                                }\n\n                                                {item.dropdowns && !this.props.changeStyle && (<i className=\"ni ni-bold-down ml-2\"></i>)}\n\n                                            </span>\n\n                                        </NavLink>\n\n                                    </li>\n                                )\n                        }\n\n\n\n                    </Fragment>\n\n\n\n                )\n\n            })\n\n            return (\n                <Fragment>\n                    <ul className=\"navbar-nav mt-4\">\n\n                        {navItems}\n\n\n                    </ul>\n\n\n\n\n                </Fragment>\n\n\n\n            )\n\n\n\n        }\n\n\n\n\n\n\n        return (\n            <Fragment>\n\n\n\n\n                {renderNavItems()}\n\n\n            </Fragment>\n        )\n    }\n}\n\n\n\n\n\nexport default SideBar;","import { GET_SINGLE_BOARD, GET_BOARDS, GET_SINGLE_OWNER, BOARDS_WITH_ADS, GET_SCHEDULE_FOR_CHAT } from '../types'\nimport authService from '../../services/authService'\nimport axiosService from '../../services/axiosService'\nimport { asyncActionStart, asyncActionFinish, asyncActionError } from '../asyncActions'\nimport { reset } from 'redux-form'\nimport axios from 'axios'\nimport { push } from 'connected-react-router'\nimport { toastr } from 'react-redux-toastr'\nimport { endpoint, prodEndpoint } from '../../config'\nimport { auth } from '../userActions'\nconst URL = process.env.NODE_ENV === 'development' ? endpoint : prodEndpoint\nconst axiosInstance = axiosService.getInstance();\n\n\nexport const getInvoices = () => {\n\n\n}\n\n\n\nexport const clearForm = (actionType) => {\n\n\n    return (dispatch) => {\n        dispatch({\n            type: actionType,\n            payload: null\n        })\n    }\n\n}\n\nexport const getSingleBoard = (boardId) => {\n\n    // boardId argument [String]\n\n    // return dispatch function \n    return (dispatch) => {\n\n        // we are making POST api request to /api/v1/boards/single/:boardId\n        axiosInstance.get(`/boards/single/${boardId}`)\n\n\n            .then((response) => {\n\n                // calling GET_SINGLE_BOARD action type and set payload as board object from server \n                dispatch({\n                    type: GET_SINGLE_BOARD,\n                    payload: response.data.board\n                })\n\n                // redirecting to create form with react-router\n                dispatch(push('/spots/create'))\n\n            })\n    }\n\n}\n\nexport const rejectRequest = (schedule, owner) => {\n\n\n\n    return (dispatch) => {\n\n        toastr.info('please wait')\n        axiosInstance.post('/owners/request/reject', { schedule })\n\n\n            .then((response) => {\n\n                dispatch(getAdsRequested(owner._id))\n                toastr.info('rejected')\n\n            })\n    }\n\n\n\n}\n\n\nexport const deleteBoard = (id) => {\n\n    // id is the board id coming from redux-form form . it is string id\n\n\n    return (dispatch) => {\n\n        // we are making POST api request to /api/v1/boards/single/delete\n        axiosInstance.post('/boards/single/delete', { boardId: id })\n\n\n            .then((response) => {\n\n\n                // pop up 'delete a board'\n                toastr.info('delete a board')\n\n                // again we call getBoards Action so that we can see updated boards list\n                dispatch(getBoards())\n\n            })\n\n            .catch((err) => {\n                console.log(err.response.data)\n                // warning back to redux-form that we can't delete board since it has running schedules ( ads )\n                toastr.error(`can't delete this board. it has scheduled ads or requests`)\n\n            })\n    }\n\n\n\n}\n\nexport const acceptRequest = (schedule, owner) => {\n\n\n\n    return (dispatch) => {\n\n        toastr.info('please wait')\n        axiosInstance.post('/owners/request/accept', { schedule, owner })\n\n\n            .then((response) => {\n\n                dispatch(getAdsRequested(owner._id))\n                dispatch(getOwner())\n                toastr.info('accepted')\n\n            })\n    }\n\n\n\n}\n\n\n\n\nexport const redirectToChat = (schedule) => {\n\n\n    return (dispatch) => {\n\n\n        dispatch({\n            type: GET_SCHEDULE_FOR_CHAT,\n            payload: schedule\n        })\n\n        dispatch(push('/chat'))\n\n    }\n\n\n}\n\nexport const searchAdsRequested = (ownerId, text) => {\n\n    return (dispatch) => {\n\n        toastr.info('searching')\n        axiosInstance.post(`/boards/reqboards`, { ownerId, text })\n            .then((response) => {\n\n                dispatch({\n                    type: BOARDS_WITH_ADS,\n                    payload: response.data\n                })\n            })\n            .catch((err) => {\n\n                // console.log(err.response.data)\n\n\n            })\n\n\n    }\n\n\n\n}\n\n\nexport const getAdsRequested = (ownerId) => {\n\n    return (dispatch) => {\n\n\n        axiosInstance.post(`/boards/reqboards`, { ownerId })\n            .then((response) => {\n\n                dispatch({\n                    type: BOARDS_WITH_ADS,\n                    payload: response.data\n                })\n            })\n            .catch((err) => {\n\n                // console.log(err.response.data)\n\n\n            })\n\n\n    }\n\n\n\n}\n\n\nexport const editUser = (data) => {\n\n    // editing user data \n    // data - data object such as username etc\n    return (dispatch) => {\n\n        // we are making POST api request to /api/v1/users/edit\n        axiosInstance.post(`/users/edit`, { ...data })\n            .then((response) => {\n                // calling auth function so that. checking user is authorized or now\n                dispatch(auth())\n                toastr.success('changed user account')\n            })\n    }\n\n\n}\n\n\nexport const createProfile = (ownerId, data) => {\n\n\n    // ownerId - id of owner we try to edit  for sending to server side\n    // data - data object such as username etc\n\n    return (dispatch) => {\n\n        // we are making POST api request to /api/v1/owners/profile.create\n        axiosInstance.post(`/owners/profile/create`, { ownerId, ...data })\n            .then((response) => {\n\n                // pop up showing that we edit user profile\n                toastr.info('edit the profile')\n\n                // calling getOwner action so that app reflect the changes instantly\n                dispatch(getOwner())\n\n\n            })\n    }\n}\n\n\n\n\nexport const getOwner = () => {\n\n\n    // action for getting single owner object for owner profile\n    return (dispatch) => {\n\n\n        // we are making GET api request to /api/v1/owners/single\n        axiosInstance.get(`/owners/single`)\n            .then((response) => {\n\n\n                // Adding owner object which we got from server to GET_SINGLE_OWNER as payload\n                dispatch({\n                    type: GET_SINGLE_OWNER,\n                    payload: response.data.owner\n                })\n\n            })\n    }\n\n\n\n}\n\n\n// getting boards ACTION  - used in redux-form\nexport const getBoards = (filters = {}, page = 1) => {\n\n\n    // initially filters object is empty and we assume as page number 1 \n\n    // returning redux-thunk function\n    return (dispatch) => {\n\n\n\n        // we are making POST api request to /api/v1/boards/all\n        axiosInstance.post(`/boards/all`, { filters, page })\n\n            .then((response) => {\n\n\n                // dispatching GET_BOARDS action type and save data ( boards we got from server) as payload\n                dispatch({\n                    type: GET_BOARDS,\n                    payload: response.data\n                })\n\n            })\n\n            .catch((err) => {\n\n\n            })\n\n    }\n\n}\n\n\n\n// LOCK/UNLOCK board actions\n\n\nexport const lockBoard = (boardId) => {\n\n    // board id from redux-form \n    return (dispatch) => {\n\n\n        // we are making POST api request to /api/v1/boards/lock\n        axiosInstance.post(`/boards/lock`, { boardId })\n            .then((response) => {\n\n                // popup for showing action of unlock/lock\n                toastr.info('lock/unlock activate')\n\n                // again we call getBoards Action so that we can see updated boards list\n                dispatch(getBoards())\n\n\n            })\n\n    }\n\n\n}\n\n// editing a board ACTION\nexport const editBoard = (board, boardId) => {\n\n    // we have two argument from redux-form >  board and boardId\n\n    // returning redux-thunk function\n    return (dispatch) => {\n\n\n        // we are making POST api request to /api/v1/boards/edit\n        axiosInstance.post(`/boards/edit`, { board, boardId })\n            .then((response) => {\n\n                // we alert popup as edited\n                toastr.info('edited')\n\n                // calling getBoards action for updateding boards list\n                dispatch(getBoards())\n\n                // now we redirect to /spots url of our owner app .  using react-router\n                dispatch(push('/spots'))\n\n            })\n\n    }\n\n}\n\n\n// creation of board action - we use that action in create board form \nexport const createBoard = (board) => {\n\n\n    // returning redux-thunk function\n    return (dispatch) => {\n\n\n        // we are making POST api request to /api/v1/boards\n        axiosInstance.post(`/boards`, board)\n            .then((response) => {\n\n                // getting response.\n\n                // calling getBoards action for updateding boards list\n                dispatch(getBoards())\n\n                // now we redirect to /spots url of our owner app .  using react-router\n                dispatch(push('/spots'))\n\n            })\n\n    }\n\n\n}\n\n\n\nexport const sendImages = (blobs, callback) => {\n\n\n    // blobs -  images objects which we get from react-dropzone library + react-cropper ( cropping images library)\n    // callback - function which we use when we get images url back to our client-side. we store these url .\n    return (dispatch) => {\n\n        // initializing formData to send images to server\n        const formData = new FormData()\n\n        // looping blobs array and append each into formData object\n        for (let i = 0; i < blobs.length; i++) {\n\n            formData.append(`file${i}`, blobs[i])\n\n        }\n\n        // setting multiplart/formdata header - since we need this when normally we send files to server. it is protocol for global.\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        }\n\n\n\n        // we are making POST api request to /api/v1/boards/upload\n        axiosInstance.post(`/boards/upload`, formData)\n            .then((response) => {\n\n                // now we got images url as response.data from server and we will send these images url \n                //into callback function and it will save into board model .\n\n                callback(response.data)\n\n            })\n\n\n    }\n\n\n\n\n}\n\n\n\nexport const deleteOriginalImg = (imageId, productId) => {\n\n\n\n    return (dispatch) => {\n\n\n        axiosInstance.post(`/boards/upload/${productId}/${imageId}`)\n            .then((response) => {\n\n\n                dispatch({\n\n                })\n\n            })\n\n            .catch((err) => {\n                console.log(err);\n            })\n\n\n\n    }\n\n\n}\n","import React, { Component } from 'react'\nimport styles from './Hero.module.css'\nimport { connect } from 'react-redux'\nimport { Link, RichText, Date } from 'prismic-reactjs';\nimport Prismic from 'prismic-javascript';\n\n\nimport LoadingComponent from '../../misc/Loading/LoadingComponent'\n\n\nclass Hero extends Component {\n\n\n    state = {\n        doc: null\n    }\n\n\n\n    componentDidMount = () => {\n\n\n\n\n\n\n    }\n\n\n\n    renderHero = () => {\n\n\n\n        return (\n            <div>\n                <h3>Spots Page</h3>\n            </div>\n        )\n\n\n\n\n    }\n\n    render() {\n\n        return (\n            this.renderHero()\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    // locale: state.locale\n})\n\nconst mapDispatchToProps = {\n\n}\n\n\nexport default connect()(Hero);","import React, { Component, Fragment } from 'react'\nimport Hero from './Hero/Hero'\n\n\n\nclass Home extends Component {\n\n\n\n    render() {\n\n\n\n\n        return (\n            <Fragment>\n\n\n                <Hero />\n\n\n\n\n            </Fragment>\n        )\n    }\n}\n\n\n\n\nexport default Home;","import React from 'react'\n\n\n\n\n\n\nconst TextInput = ({ input, type, placeholder, prepend, logo, styleFrom, meta: { touched, error } }) => {\n\n\n\n    return (\n        <div className=\"form-group mb-3\" >\n\n            <div className=\"input-group input-group-alternative \" >\n                {\n                    prepend &&\n                    (\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                <i className={logo}></i>\n                            </span>\n                        </div>\n                    )\n                }\n                <input\n                    type={type}\n                    className=\"form-control\"\n                    style={styleFrom}\n                    {...input}\n                    placeholder={placeholder}\n                />\n\n            </div>\n\n\n            {error && <label className=\"\" style={{ color: 'red', fontSize: '10px' }}>{error}</label>}\n        </div>\n    )\n}\n\nexport default TextInput;","import React, { Component } from 'react'\nimport { Editor } from 'react-draft-wysiwyg';\nimport styles from './Editor.module.css'\nimport '../../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\n\n\n\n\nclass EditorComponent extends Component {\n\n\n\n\n    constructor(props) {\n        super(props)\n\n        const html = this.props.content ? this.props.content : '';\n\n        const contentBlock = htmlToDraft(html)\n\n        if (contentBlock) {\n\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\n            const editorState = EditorState.createWithContent(contentState)\n\n            this.state = {\n\n                editorState,\n\n            }\n\n        }\n\n\n\n    }\n    onEditorStateChange = (editorState) => {\n        this.setState({\n            editorState,\n        });\n    };\n\n    render() {\n\n        const { input } = this.props;\n\n\n        return (\n            <div className=\"container my-3 py-3\">\n                <div className=\"\">\n\n                    <div className=\"col-12\">\n\n                        <h4>{this.props.description}</h4>\n                        <Editor\n                            wrapperClassName={styles.editorwrapper}\n                            editorClassName={styles.editor}\n                            editorState={this.state.editorState}\n                            onEditorStateChange={\n                                this.onEditorStateChange\n\n                            }\n                            onChange={\n                                (contentState) => {\n                                    // input.onChange(contentState)\n                                    let htmlContents = draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\n                                    input.onChange(htmlContents)\n                                }\n\n                            }\n                        />\n                    </div>\n\n                </div>\n\n\n            </div>\n        )\n    }\n}\n\n\n\nexport default EditorComponent","\nimport React, { Component, Fragment } from 'react'\nimport { toastr } from 'react-redux-toastr'\nimport DropZone from 'react-dropzone'\nimport Cropper from 'react-cropper'\nimport 'cropperjs/dist/cropper.css'\nimport { connect } from 'react-redux'\nimport { sendImages, deleteOriginalImg } from '../../../actions/boards/boards'\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\n\n\n\n\n\n\n\n\nclass ProductPhotos extends Component {\n\n\n    state = {\n\n        files: [],\n        image: {},\n        fieldName: '',\n        filesCropped: [],\n        images: [],\n\n\n    }\n\n    componentWillReceiveProps = (prevProps) => {\n\n\n        if (prevProps.initialImages) {\n\n            this.setState({\n                images: [...prevProps.initialImages]\n            }, () => {\n                console.log(this.state.images)\n            })\n        }\n\n\n\n\n    }\n\n    onDrop = (files) => {\n\n        this.setState({\n            files: files,\n            fileName: files[0].name\n        })\n\n    }\n\n\n\n    cropImage = () => {\n\n        if (typeof this.refs.cropper.getCroppedCanvas() === 'undefined') {\n\n            return;\n\n        }\n\n        this.refs.cropper.getCroppedCanvas().toBlob((blob) => {\n\n            let imgUrl = URL.createObjectURL(blob)\n\n            this.setState({\n\n                image: {\n                    cropResult: imgUrl,\n                    image: blob\n                }\n            })\n\n\n\n        })\n\n\n    }\n\n    loadImages = () => {\n\n        let photosArr, blobsToSend;\n        if (this.state.image.image) {\n            photosArr = [...this.state.filesCropped, { blob: this.state.image.image, tempurl: this.state.image.cropResult }]\n\n\n        }\n\n        this.setState({\n            filesCropped: photosArr,\n        })\n\n\n\n\n\n    }\n\n\n    cancelCrop = () => {\n        this.setState({\n            files: [],\n            image: {}\n        })\n\n\n    }\n\n\n\n    removeImg = (tempurl) => {\n\n        let filteredFilesCropped = this.state.filesCropped.filter((filecrop) => {\n            return filecrop.tempurl !== tempurl\n        })\n\n        this.setState({\n            filesCropped: filteredFilesCropped,\n        })\n    }\n\n\n    uploadPhotos = () => {\n        const { input } = this.props;\n        if (this.state.filesCropped.length > 0) {\n\n            const blobs = this.state.filesCropped.map((file) => {\n                return file.blob\n            })\n\n            toastr.info('image', 'uploading please wait')\n\n\n\n            this.props.sendImages(blobs, (data) => {\n\n                this.setState((previousState, currentProps) => {\n\n\n                    return {\n                        filesCropped: [],\n                        files: [],\n                        image: {},\n                        images: [...data.results, ...previousState.images],\n\n\n\n                    };\n                }, () => {\n                    toastr.success(`successfully uploaded ${data.results.length} photos`)\n                    input.onChange(this.state.images)\n\n                });\n            })\n\n        }\n\n\n\n    }\n\n\n    deleteImage = (imageId, productId) => {\n\n        this.props.deleteOriginalImg(imageId, productId)\n\n        let filteredImages = this.state.images.filter((image) => {\n            return image.public_id !== imageId;\n        })\n\n        this.setState({\n            images: filteredImages\n        }, () => {\n            this.props.input.onChange(this.state.images)\n            toastr.warning('deleted')\n        })\n    }\n\n\n    renderUploadedImages = () => {\n\n        console.log(this.state.images)\n        return this.state.images.map((image, i) => {\n            return (\n                <div\n                >\n                    {\n                        // this.state.images.length > 0 && (\n                        //     <i\n                        //         className=\"ni ni-fat-remove\"\n                        //         style={{\n                        //             cursor: 'pointer',\n                        //             fontSize: '30px',\n                        //             color: 'red'\n                        //         }}\n                        //         onClick={() => {\n\n\n                        //             this.deleteImage(image.public_id, this.props.advertId)\n\n                        //         }}\n                        //     >\n\n                        //     </i>\n\n                        // )\n                    }\n\n                    <br />\n                    <img style={{ height: '100px', width: '250px', objectFit: 'scale-down' }} src={image.url} alt=\"Card image cap\" />\n                </div>\n            )\n\n\n        })\n\n    }\n\n\n\n\n\n    render() {\n\n\n\n\n        return (\n\n            <Fragment>\n\n                <div className=\"container-fluid my-4\">\n                    <h3 className=\"text-center\">photos for Spot Location</h3>\n                    <div className=\"row\">\n\n                        <div className=\"col-md-6 col-lg-6\">\n\n                            <DropZone onDrop={this.onDrop} multiple={false}>\n                                <div style={{ paddingTop: '30px', textAlign: 'center' }}>\n                                    <span>please upload or drop photos here</span>\n\n                                </div>\n                            </DropZone>\n\n\n                        </div>\n                        <div className=\"col-md-6 col-lg-6\">\n\n\n\n                            {\n                                this.state.files[0] && (\n                                    <div className=\"row\">\n                                        <div className=\"col-md-8\">\n                                            <Cropper\n                                                style={{ height: 200, width: '100%' }}\n                                                ref='cropper'\n                                                src={this.state.files[0].preview}\n                                                aspectRatio={this.props.upper / this.props.lower}\n                                                viewMode={0}\n                                                dragMode=\"move\"\n                                                guides={false}\n                                                scalable={false}\n                                                cropBoxMovable={true}\n                                                cropBoxResizable={true}\n                                                crop={this.cropImage}\n\n                                            />\n\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <div className=\"btn-group btn-group-sm\" role=\"group\" >\n                                                <button type=\"button\"\n                                                    class=\"btn btn-secondary\"\n                                                    onClick={() => { this.loadImages() }}\n                                                >Add</button>\n\n                                                <button\n                                                    onClick={() => { this.cancelCrop() }}\n                                                    type=\"button\" class=\"btn btn-secondary\">Cancel</button>\n                                                <button\n                                                    onClick={() => { this.uploadPhotos() }}\n                                                    type=\"button\" class=\"btn btn-danger\">Upload All</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n\n\n                            }\n\n\n                        </div>\n\n\n                    </div>\n\n                    {this.state.filesCropped.length > 0 && <h4>New Images</h4>}\n\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'flex-start',\n                            flexWrap: 'wrap',\n                            margin: '20px'\n                        }}\n\n                    >\n\n                        {\n\n                            this.state.filesCropped && this.state.filesCropped.map((image) => {\n\n                                return (\n\n                                    <div>\n\n                                        <i\n                                            className=\"ni ni-fat-remove\"\n                                            style={{\n                                                cursor: 'pointer',\n                                                fontSize: '30px',\n                                                color: 'red'\n                                            }}\n                                            onClick={() => { this.removeImg(image.tempurl) }}\n                                        >\n\n                                        </i>\n\n                                        <br />\n                                        <img style={{ height: '100px', width: '250px', objectFit: 'scale-down' }} src={image.tempurl} alt=\"Card image cap\" />\n                                    </div>\n\n\n\n\n\n\n                                )\n                            })\n\n\n                        }\n\n                    </div>\n                </div>\n\n                <div\n\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'flex-start',\n                        flexWrap: 'wrap',\n                        margin: '20px'\n                    }}\n                >\n\n\n\n                    {\n\n\n                        this.renderUploadedImages()\n\n                    }\n\n                </div>\n\n\n\n            </Fragment >\n        )\n    }\n}\n\n\n\n\n\n\nconst mapDispatchToProps = {\n    deleteOriginalImg,\n    sendImages\n}\n\n\n\n\nexport default connect(null, mapDispatchToProps)(ProductPhotos);","\nimport React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react';\n\n\n\nconst AnyReactComponent = ({ text }) => <div>\n    <i className=\"ni ni-pin-3\"\n        style={{\n            color: 'red',\n            fontSize: '20px'\n        }}\n    ></i>\n</div>;\n\n\n\nclass Maps extends Component {\n\n\n    state = {\n        lat: this.props.coordinates[1],\n        lng: this.props.coordinates[0]\n    }\n\n    handleClick = (e) => {\n\n\n        this.setState({\n            lat: e.lat,\n            lng: e.lng\n        }, () => {\n            this.props.changeLatLng(this.state.lat, this.state.lng)\n        })\n    }\n\n    render() {\n\n\n\n\n        return (\n\n            <div className=\"my-2 py-2 container\">\n\n                <div\n                    className=\"d-flex my-2 py-2 flex-row justify-content-center\"\n                >\n                    <div className=\"p-3 m-3\">\n                        Your Latitude : <span style={{ backgroundColor: 'orange', color: 'white' }}>{this.state.lat}</span>\n                    </div>\n                    <div className=\"p-3 m-3 \">\n                        Your Longtitude :  <span style={{ backgroundColor: 'orange', color: 'white' }}>{this.state.lng}</span>\n                    </div>\n\n                </div>\n                <div style={{ width: '100%', height: '500px' }} >\n                    <GoogleMapReact\n                        bootstrapURLKeys={{ key: 'AIzaSyD9EdV2JfPG1Vfviw9gf_HlblIUfs7Ie2E' }}\n                        defaultCenter={this.props.center}\n                        defaultZoom={this.props.zoom}\n                        onClick={this.handleClick}\n                    >\n                        <AnyReactComponent\n                            lat={this.state.lat}\n                            lng={this.state.lng}\n                            text=\"My Marker\"\n                        />\n\n                    </GoogleMapReact>\n                </div >\n\n\n            </div >\n\n\n        )\n    }\n}\n\n\n\nexport default Maps;","import React from 'react'\nimport { Field, FieldArray } from 'redux-form'\nimport TextInput from '../../../misc/forms/inputs/TextInput'\nimport { Button, ButtonGroup } from 'reactstrap';\n\n\nfunction FieldArrayComponent(props) {\n\n\n\n    const renderItems = ({ fields }) => {\n\n        return (\n\n\n\n            <div className=\"container my-3 py-3 \">\n\n\n\n\n                <ul\n                    style={{\n                        listStyle: 'none'\n                    }}\n\n\n\n                >\n                    <button\n                        className=\"btn  btn-sm\"\n                        onClick={() => { fields.push('') }}\n                        type=\"button\"\n                        style={{\n                            backgroundImage: `linear-gradient(120deg, #f6d365 0%, #fda085 100%)`,\n                            color: 'white'\n                        }}\n\n                    >\n                        click to add target group\n                </button>\n\n\n                    {fields.map((member, index) =>\n                        <li key={index}\n                            className=\"\"\n                        >\n                            <Button close onClick={() => fields.remove(index)}>\n\n                            </Button>\n                            <div className=\"container card my-3 py-2 \">\n\n                                <Field\n                                    name={`${member}`}\n                                    type=\"text\"\n                                    component={TextInput}\n                                    placeholder=\"click to add target\"\n                                    styleFrom={{\n                                        color: 'black'\n\n                                    }}\n\n                                />\n\n\n                            </div>\n\n                        </li>\n                    )}\n                </ul>\n\n\n\n            </div>)\n\n\n\n    }\n\n\n    return (\n        <div>\n\n            <FieldArray name={`targets`} component={renderItems} />\n        </div>\n    )\n}\n\n\nexport default FieldArrayComponent;","\nimport React from 'react'\nimport { reduxForm, Field } from 'redux-form'\nimport TextInput from '../../../misc/forms/inputs/TextInput'\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport Editor from '../../../misc/forms/editor/Editor'\nimport Photos from '../../../misc/ProductPhotos/ProductPhotos'\nimport Maps from './Maps'\nimport Targets from './targets'\n\n\nconst validate = values => {\n    const errors = {}\n    if (!values.id) {\n        errors.id = 'board id is required'\n    }\n\n    if (!values.name) {\n        errors.name = \"board name is required\"\n    }\n\n    if (!values.size) {\n        errors.size = { width: 'width of board is required', height: \"height of board required\" }\n    }\n\n    if (!values.price) {\n        errors.price = { normal: 'normal price required', promo: \"promo price required\" }\n    }\n\n\n\n    return errors\n}\n\n\nfunction Form({\n    handleSubmit,\n    submitCallBack, selectRegion,\n    selectCountry, country, region, center, zoom, changeLatLngHandler, initialValues\n}) {\n\n\n\n    console.log(initialValues)\n\n    return (\n\n\n\n        <form\n            onSubmit={handleSubmit(submitCallBack)}\n\n        >\n\n            <div className=\"container\">\n                <h4 className=\"text-muted text-center my-2 py-2\">Information</h4>\n                <div className=\"row\">\n\n                    <div className=\"col-md-6\">\n                        <Field\n                            component={TextInput}\n                            name=\"id\"\n                            placeholder=\"unique ID\"\n                            type=\"text\"\n\n\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <Field\n                            component={TextInput}\n                            name=\"name\"\n                            placeholder=\"spot name\"\n                            type=\"text\"\n                        />\n                    </div>\n\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <Field\n                            component={TextInput}\n                            name=\"price.normal\"\n                            placeholder=\"normal price\"\n                            type=\"number\"\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <Field\n                            component={TextInput}\n                            name=\"price.promo\"\n                            placeholder=\"promo price\"\n                            type=\"number\"\n                        />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <Field\n                            component={TextInput}\n                            name=\"size.width\"\n                            placeholder=\"width in inches\"\n                            type=\"number\"\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <Field\n                            component={TextInput}\n                            name=\"size.height\"\n                            placeholder=\"height in inches\"\n                            type=\"number\"\n                        />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <Field\n                            component={TextInput}\n                            name=\"population\"\n                            placeholder=\"estimate population\"\n                            type=\"number\"\n                        />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <Targets />\n                    </div>\n                </div>\n\n                <div className=\"row \">\n\n                    <div className=\"col-md-12\">\n                        <Field\n                            component={Editor}\n                            name=\"description\"\n                            // initialContent={initialValues ? initialValues.description : '<p></p>'}\n                            description={\"Spot Place Description\"}\n                        />\n                    </div>\n\n                </div>\n\n                <h4 className=\"text-muted text-center my-2 py-2\">Location Setting</h4>\n                <div className=\"row\">\n                    <div className=\"col-lg-6 col-sm-12 mb-2\">\n\n\n                        <CountryDropdown\n                            value={country}\n                            onChange={(val) => selectCountry(val)}\n                            classes=\"custom-select\"\n                        />\n\n                    </div>\n                    <div className=\"col-lg-6 col-sm-12\">\n\n                        <RegionDropdown\n                            country={country}\n                            value={region}\n                            onChange={(val) => selectRegion(val)}\n                            classes=\"custom-select\"\n                            showDefaultOption={true}\n                        />\n\n\n                    </div>\n                </div>\n\n                <p className=\"text-muted text-center my-2 py-2\">Click in Map for your spot detailed position</p>\n                <div className=\"container my-3 py-3\">\n                    <div className=\"\">\n\n                        <Maps\n                            center={center}\n                            zoom={zoom}\n                            changeLatLng={changeLatLngHandler}\n                            coordinates={initialValues ? initialValues.location.coordinates : ['', '']}\n\n                        />\n\n                    </div>\n\n                </div>\n\n\n                <div>\n\n\n                    <Field\n                        component={Photos}\n                        name=\"photos\"\n                        initialImages={initialValues ? initialValues.photos : []}\n                        upper={10}\n                        lower={10}\n                    />\n\n                </div>\n\n\n\n                <button\n                    style={{\n                        backgroundImage: `radial-gradient(circle 248px at center, #9DC3C1 0%, #9DC3C1  47%, #9DC3C1 100%)`,\n                        color: 'white'\n                    }}\n                    className=\"btn btn-block\"\n                    type=\"submit\"\n                >\n\n                    {initialValues ? 'Edit Spot Location' : 'Add Spot Location'}\n\n                </button>\n            </div>\n\n\n        </form>\n    )\n}\n\n\n\nexport default reduxForm({\n    form: 'create-board',\n    validate\n})(Form);","\nexport const isEmpty = (value) => {\n\n    return value === null ||\n        value === undefined ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n\n\n}\n\nexport const getTotalIncomes = (arr) => {\n\n\n    let refinedArr = arr.map((item) => {\n        return item.amount;\n    })\n\n    const finalVal = refinedArr.reduce((accumulator, currentValue) => {\n\n\n        return accumulator + currentValue\n    })\n\n    return finalVal;\n\n\n}","\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport Form from './Form/Form'\nimport { isEmpty } from '../../../utils/isEmpty'\nimport { createBoard, getOwner, clearForm, editBoard } from '../../../actions/boards/boards'\n\nclass index extends Component {\n\n\n    state = {\n        country: 'Tunisia',\n        region: 'Tunis',\n        center: {\n            lat: 36.8065,\n            lng: 10.1815\n        },\n        zoom: 15,\n        lat: null,\n        lng: null\n\n    }\n\n    componentWillUnmount = () => {\n\n        this.props.clearForm('GET_SINGLE_BOARD')\n    }\n    latlngHandler = (lat, lng) => {\n\n        this.setState({\n            lat,\n            lng\n        })\n\n    }\n\n\n    submitHandler = (data) => {\n\n\n        let board = {\n            id: data.id,\n            name: data.name,\n            price: data.price,\n            description: data.description,\n            country: this.state.country,\n            region: this.state.region,\n            population: data.population,\n            targets: data.targets,\n            size: data.size,\n            coordinates: [this.state.lng, this.state.lat],\n            photos: data.photos\n\n        };\n\n\n        if (this.props.initialValues) {\n\n            this.props.editBoard(board, this.props.initialValues._id)\n        } else {\n            this.props.createBoard(board)\n        }\n\n\n\n\n\n\n    }\n\n    selectCountry = (val) => {\n\n        this.setState({ country: val });\n    }\n\n    selectRegion = (val) => {\n        this.setState({ region: val });\n    }\n\n    render() {\n\n\n\n\n\n        return (\n\n\n\n\n\n\n            <div className=\"container my-4 py-4\">\n\n                <Form\n                    submitCallBack={this.submitHandler}\n                    selectCountry={(val) => { this.selectCountry(val) }}\n                    selectRegion={(val) => { this.selectRegion(val) }}\n                    country={this.state.country}\n                    region={this.state.region}\n                    center={this.state.center}\n                    zoom={this.state.zoom}\n                    changeLatLngHandler={this.latlngHandler}\n                    initialValues={this.props.initialValues}\n                    clearForm={this.props.clearForm}\n                    initialImages={this.props.initialValues ? this.props.initialValues.photos : []}\n                />\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    initialValues: !isEmpty(state.board) ? state.board.board : null\n})\n\nconst mapDispatchToProps = {\n    createBoard,\n    getOwner,\n    clearForm,\n    editBoard\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(index);","import React, { Component } from 'react'\nimport { Table, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport styles from './Table.module.css'\n\n\n\n\nclass TableComp extends Component {\n\n\n\n    state = {\n        dropdownOpen: false\n    };\n\n    toggle = () => {\n        this.setState(prevState => ({\n            dropdownOpen: !prevState.dropdownOpen\n        }));\n    }\n\n    // Handlers coming from props\n\n    // edit document - for example a product\n    productEditHandler = (id) => {\n\n        const { editHandler } = this.props;\n\n        editHandler(id)\n\n\n\n    }\n\n\n    // delete document\n    deletingHandler = (id) => {\n\n\n        this.props.deleteHandler(id)\n    }\n\n\n    // view - we need to view whole document for details \n    productViewHandler = (id) => {\n\n\n\n        this.props.viewHandler(id)\n\n\n    }\n\n\n\n    renderTableHeads = () => {\n        const { tableheads } = this.props;\n\n        return tableheads.map((head, i) => {\n\n            return (\n                <th key={i}>{head}</th>\n            )\n\n        })\n    }\n\n\n\n\n\n    renderTableRows = () => {\n        const {\n            rows,\n            selectedRowItems,\n            tableheads,\n            editStyle,\n            handlers\n\n\n        } = this.props;\n\n\n\n        const renderActionsDD = (id, item) => {\n\n\n\n\n\n            const renderActionsHandler = () => {\n\n\n                if (handlers) {\n\n                    return handlers.map((handler, i) => {\n\n                        return (\n\n                            <a\n                                class=\"dropdown-item\"\n                                onClick={() => { handler.func(id, item) }}\n\n                            >\n\n                                {handler.name}\n\n                            </a>\n\n\n\n\n                        )\n\n\n                    })\n\n\n\n                }\n\n\n\n            }\n\n\n            return (\n                <div className=\"dropdown\" >\n                    <button className=\"btn  btn-sm btn-secondary dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        manage\n                    </button>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\"  >\n                        {renderActionsHandler()}\n                    </div>\n\n\n\n                </div>\n            )\n        }\n\n\n\n\n\n\n        if (rows) {\n\n\n\n            return rows.map((row, i) => {\n\n                console.log(row)\n                return (\n                    <tr\n                        key={i}\n                    >\n\n\n                        {\n                            tableheads.map((head, i) => {\n                                return (<td\n                                    key={i}\n                                >\n                                    {row[head]}\n                                </td>)\n                            })\n                        }\n                        <td >\n                            {renderActionsDD(row.id)}\n                        </td>\n\n\n                    </tr>\n                )\n            })\n\n\n        }\n    }\n\n\n    renderTable = () => {\n\n        return (\n\n            <Table\n                hover\n                bordered\n                responsive\n\n\n\n            >\n\n                <thead>\n                    {this.renderTableHeads()}\n\n                </thead>\n\n                <tbody>\n                    {this.renderTableRows()}\n\n\n\n                </tbody>\n\n\n            </Table>\n\n\n        )\n\n\n    }\n\n    render() {\n\n\n        return (\n\n\n\n\n            <div className=\"container-fluid\">\n                {this.renderTable()}\n            </div>\n        )\n    }\n\n\n}\n\n\nexport default TableComp;","import React, { Component, Fragment } from 'react'\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\n\n\n\n\nclass PaginationComp extends Component {\n\n\n    render() {\n\n        const { items, isActiveColor, submitCallback } = this.props;\n        let lastPage, hasNextPage, hasPreviousPage, currentPage;\n\n\n\n        if (items) {\n            lastPage = items.lastPage;\n            hasNextPage = items.hasNextPage;\n            hasPreviousPage = items.hasPreviousPage;\n            currentPage = items.currentPage\n        }\n\n\n        const renderPagination = () => {\n\n\n\n            if (lastPage) {\n\n                return Array.from(Array(lastPage), (item, index) => {\n\n\n                    let isActive;\n                    if ((index + 1) === currentPage) {\n                        isActive = `${isActiveColor}`\n                    } else {\n                        isActive = 'transparent'\n                    }\n\n\n\n                    return (\n                        <PaginationItem >\n                            <PaginationLink\n                                style={{\n                                    backgroundColor: isActive,\n\n                                }}\n                                onClick={() => {\n\n                                    if (items) {\n                                        submitCallback(null, (index + 1))\n\n\n                                    }\n                                }}\n\n                            >\n                                {index + 1}\n                            </PaginationLink>\n                        </PaginationItem>\n                    )\n                })\n\n\n            }\n\n\n\n        }\n\n\n\n        return (\n\n            <div>\n                <Pagination aria-label=\"Page navigation example\" >\n\n                    {\n                        hasPreviousPage && <PaginationItem >\n                            <PaginationLink\n                                previous\n\n                                onClick={\n                                    () => {\n                                        if (items) {\n                                            submitCallback(null, (items.currentPage - 1))\n                                        }\n\n\n                                    }\n                                }\n\n                            />\n                        </PaginationItem>\n                    }\n\n                    {renderPagination()}\n\n\n                    {\n\n                        hasNextPage && <PaginationItem>\n\n\n                            <PaginationLink\n                                next\n                                onClick={() => {\n                                    if (items) {\n                                        submitCallback(null, (items.currentPage + 1))\n                                    }\n\n                                }}\n\n                            />\n                        </PaginationItem>\n\n\n                    }\n\n                </Pagination>\n            </div>\n        )\n    }\n}\n\n\nexport default PaginationComp;","\nimport React, { Component, Fragment } from 'react'\nimport Table from '../../misc/table/Table'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport { deleteBoard, getSingleBoard, lockBoard, getBoards } from '../../../actions/boards/boards'\nimport Pagination from '../../misc/pagination/Pagination'\n\n\n\nclass index extends Component {\n\n\n\n    submitHandler = (filters, page) => {\n        this.props.getBoards(filters, page)\n    }\n    _editHandler = (id) => {\n\n        this.props.getSingleBoard(id)\n\n\n    }\n\n    _deleteHandler = (id) => {\n\n        this.props.deleteBoard(id)\n\n\n    }\n\n    _viewHandler = () => {\n\n        alert('Nothing to view for board')\n\n    }\n\n    _lockHandler = (id) => {\n        this.props.lockBoard(id)\n    }\n\n\n    render() {\n\n        let rows;\n        let tableheads = ['id', 'name', 'region', 'locked', 'createdAt', 'price', 'company', 'population']\n\n        console.log(this.props.boards)\n        if (this.props.boards && this.props.boards.boards.length > 0) {\n\n            rows = this.props.boards.boards.map((board) => {\n\n                let momentDate = moment(board.createdAt).format('YYYY MM DD')\n                return {\n                    id: board._id,\n                    name: board.name,\n                    region: board.region,\n                    locked: board.locked ? 'true' : 'false',\n                    createdAt: momentDate,\n                    price: board.price.normal || 'no price',\n                    company: board.owner.company || 'no company',\n                    population: board.population || 'no population'\n\n                }\n\n            })\n            console.log(rows)\n\n        }\n\n        return (\n\n\n\n            <Fragment>\n                <h5 className=\"text-center text-muted display-4 my-3 py-3\">All Spots you owned</h5>\n\n\n                <div className=\"my-2 py-2\">\n\n                    <Pagination\n                        items={this.props.boards ? this.props.boards : []}\n                        submitCallback={this.submitHandler}\n                    />\n\n                </div>\n                <div className=\"\">\n\n                    <Table\n                        tableheads={tableheads}\n                        rows={rows}\n                        handlers={\n                            [\n                                { name: 'edit', func: this._editHandler },\n                                { name: 'delete', func: this._deleteHandler },\n                                { name: 'lock/unlock', func: this._lockHandler },\n\n\n                            ]\n                        }\n                    />\n\n                </div>\n            </Fragment>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    boards: state.board ? state.board.boards : []\n})\n\nconst mapDispatchToProps = {\n    deleteBoard,\n    getSingleBoard,\n    lockBoard,\n    getBoards\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(index);","\nimport React, { Component, Fragment } from 'react'\nimport { Nav, NavItem } from 'reactstrap';\nimport { NavLink, Switch, Route } from 'react-router-dom'\nimport { Divider } from '@material-ui/core'\nimport Create from './create'\nimport All from './all'\nimport { connect } from 'react-redux'\n\nimport { getBoards, getOwner } from '../../actions/boards/boards'\n\n\nclass index extends Component {\n\n\n\n\n    componentDidMount() {\n        this.props.getBoards()\n        this.props.getOwner()\n    }\n\n\n    render() {\n\n\n\n\n\n        return (\n\n\n\n            <Fragment>\n\n                <div className=\"container-fluid\">\n                    <h2 className=\"text-center display-3 my-2 py-2\">Boards Management</h2>\n\n                    <Divider />\n                    <div className=\"my-2 py-2\">\n\n                        <Nav pills>\n                            <li className=\"nav-item\"\n\n                            >\n                                <NavLink\n                                    to=\"/spots/\"\n                                    className=\"nav-link\"\n                                    style={{\n                                        backgroundImage: `radial-gradient(circle 248px at center, #9DC3C1 0%, #9DC3C1  47%, #9DC3C1 100%)`,\n                                        color: 'white'\n                                    }}\n\n                                >\n                                    All Boards\n                                </NavLink>\n                            </li>\n\n                            <li className=\"nav-item\">\n                                <NavLink\n                                    to=\"/spots/create\"\n                                    className=\"nav-link\"\n                                    style={{\n                                        backgroundImage: `radial-gradient(circle 248px at center, #9DC3C1 0%, #9DC3C1  47%, #9DC3C1 100%)`,\n                                        color: 'white'\n                                    }}\n                                >\n                                    Create Board\n                                </NavLink>\n                            </li>\n\n                        </Nav>\n                    </div>\n\n\n                    <Switch>\n\n                        <Route exact path=\"/spots\" component={All} />\n                        <Route path=\"/spots/create\" component={Create} />\n\n\n                    </Switch>\n\n\n                </div>\n\n\n            </Fragment>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n\n})\n\nconst mapDispatchToProps = {\n    getBoards,\n    getOwner\n}\n\nexport default connect(null, mapDispatchToProps)(index);","\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getAdsRequested, redirectToChat , acceptRequest , rejectRequest  , searchAdsRequested} from '../../actions/boards/boards'\nimport { isEmpty } from '../../utils/isEmpty'\nimport moment from 'moment'\n\n\nclass index extends Component {\n\n\n\n    state = {\n        name: null\n    }\n\n\n\n\n\n\n    componentDidMount() {\n        this.props.getAdsRequested(this.props.owner._id)\n    }\n\n\n\n\n    inputChangeHandler = (e) => {\n\n        e.persist();\n        console.log('in callback');\n        console.log(e.target.value);\n\n        this.setState(function (prevState, props) {\n            console.log('in async callback');\n            console.log({ isNull: e.target === null })\n\n            console.log(e.target.value);\n\n            return {\n                name: e.target.value\n            }\n        })\n\n    }\n\n    renderSchedules = () => {\n\n        const { requests } = this.props;\n        console.log('requests', requests)\n\n        if (requests && requests.schedules.length > 0) {\n\n            return requests.schedules.map((schedule) => {\n                let momentStart = moment(schedule.from).format('DD MM YYYY')\n                let momentEnd = moment(schedule.to).format('DD MM YYYY')\n                let requestDate = moment(schedule.createdAt).fromNow()\n\n                let calcPrice = (price) => {\n\n                    return moment(schedule.to).diff(moment(schedule.from), 'days') * price\n\n                }\n\n                return (\n                    <div className=\"col-md-4\">\n                        <div class=\"card border-warning mb-3\">\n                            <div class=\"card-header border-warning\">\n\n                                Ads Name :    {schedule.advert.name || 'no ads name'}\n                                <div class=\"btn-group\" role=\"group\">\n                                    <button type=\"button\" class=\"btn btn-secondary\"\n                                    onClick={() => {this.props.acceptRequest(schedule , this.props.owner)}}\n                                    >\n                                    \n                                    Accept\n                                    \n                                    </button>\n                                    <button type=\"button\" class=\"btn btn-secondary\"\n                                    onClick={() => {this.props.rejectRequest(schedule , this.props.owner)}}\n                                    >\n                                    \n                                    Reject\n                                    \n                                    </button>\n\n                                </div>\n                            </div>\n                            <ul class=\"list-group list-group-flush\">\n                                <li class=\"list-group-item\">Start :  <i className=\"far fa-calendar-alt\"></i>  {momentStart}</li>\n                                <li class=\"list-group-item\">End :  <i className=\"far fa-calendar-alt\"></i>  {momentEnd}</li>\n                                <li class=\"list-group-item\">Your Board :  {schedule.board.name || 'no name'}</li>\n                                <li class=\"list-group-item\">Advertiser :  {schedule.advertiser.company || 'no name'}</li>\n                                <li class=\"list-group-item\">Earning : $ {calcPrice(schedule.board.price.normal)}  </li>\n                            </ul>\n\n                            <div class=\"card-footer bg-transparent border-warbubg\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn\"\n                                    style={{\n                                        backgroundImage: `radial-gradient(circle 248px at center, #9DC3C1 0%, #9DC3C1  47%, #9DC3C1 100%)`,\n                                        color: 'white'\n                                    }}\n                                    onClick={() => { this.props.redirectToChat(schedule) }}\n\n\n                                >   <i className=\"far fa-comments\"></i>Chat with Advertiser</button>\n                            </div>\n                            <div class=\"card-footer bg-transparent border-warning\">Requested at {requestDate} ago.</div>\n                        </div>\n\n                    </div >\n\n                )\n            })\n\n        } else {\n\n\n            return (\n                <div >No  Ads Requests for now.</div>\n            )\n        }\n\n\n\n\n    }\n\n\n    render() {\n\n\n\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h4 className=\"display-4\">Your Own Boards with ads requests from advertisers</h4>\n                    <p>Check ads requests from each board and decide to accept or reject</p>\n                </div>\n                <div className=\"row my-2 py-2\">\n                    <div className=\"col-md-10 col-sm-12 py-2\">\n                        <div className=\"form-group\">\n                            <div className=\"input-group mb-4\">\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\"><i className=\"ni ni-zoom-split-in\"></i></span>\n                                </div>\n                                <input\n                                    className=\"form-control\" placeholder=\"Search ads requests by name\" type=\"text\" name=\"name\"\n                                    onChange={this.inputChangeHandler}\n                                />\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                    <div className=\"col-md-2 col-sm-12  py-2\">\n\n                        <button\n                            className=\"btn\"\n                            style={{\n                                borderRadius: '10px',\n                              \n                                    backgroundImage: `radial-gradient(circle 248px at center, #F7AA97 0%, #F7AA97  47%, #F7AA97 100%)`,\n                                    color: `#fff`\n                               \n                            }}\n                            onClick={() => {\n                                this.props.searchAdsRequested(this.props.owner._id , this.state.name)\n                            }}\n\n                        >\n                            Search\n                    </button>\n\n                    </div>\n\n                </div>\n                <div className=\"card-deck row\">\n\n\n\n                    {this.renderSchedules()}\n\n                </div>\n\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    owner: !isEmpty(state.owner) ? state.owner.owner: null,\n    requests: !isEmpty(state.board) ? state.board.requests : null \n})\n\nconst mapDispatchToProps = {\n    getAdsRequested,\n    redirectToChat ,\n    acceptRequest ,\n    rejectRequest ,\n    searchAdsRequested\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(index);","import React from 'react'\n\n\n\n\n\n\nconst TextArea = ({ input, rows, styleFrom, type, placeholder, meta: { touched, error } }) => {\n\n\n\n\n    return (\n\n\n        <div className=\"form-group mb-3\">\n\n            <div className=\"input-group input-group-alternative\">\n                {/* {\n                    prepend &&\n                    (\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                <i className={logo}></i>\n                            </span>\n                        </div>\n                    )\n                } */}\n                <textarea\n                    type={type}\n                    className=\"form-control\"\n                    {...input}\n                    rows={rows}\n                    placeholder={placeholder}\n                    style={styleFrom}\n\n                />\n\n\n            </div>\n            {touched && error && <div className=\"invalid-feedback\">{error}</div>}\n\n        </div>\n    )\n}\n\nexport default TextArea;","import React from 'react'\nimport { Field, FieldArray } from 'redux-form'\nimport TextInput from '../../../misc/forms/inputs/TextInput'\nimport { Button, ButtonGroup } from 'reactstrap';\n\n\nfunction FieldArrayComponent(props) {\n\n\n\n    const renderItems = ({ fields }) => {\n\n        return (\n\n\n\n            <div className=\"container my-3 py-3 \">\n\n\n\n\n                <ul\n                    style={{\n                        listStyle: 'none'\n                    }}\n\n\n\n                >\n                    <button\n                        className=\"btn  btn-sm btn-primary\"\n                        onClick={() => { fields.push('') }}\n                        type=\"button\"\n\n\n                    >\n                        click to add email\n                </button>\n\n\n                    {fields.map((member, index) =>\n                        <li key={index}\n                            className=\"\"\n                        >\n                            <Button close onClick={() => fields.remove(index)}>\n\n                            </Button>\n                            <div className=\"container card my-3 py-2 \">\n\n                                <Field\n                                    name={`${member}`}\n                                    type=\"text\"\n                                    component={TextInput}\n                                    placeholder=\"click to add email\"\n                                    styleFrom={{\n                                        color: 'black'\n\n                                    }}\n\n                                />\n\n\n                            </div>\n\n                        </li>\n                    )}\n                </ul>\n\n\n\n            </div>)\n\n\n\n    }\n\n\n    return (\n        <div>\n\n            <FieldArray name={`email`} component={renderItems} />\n        </div>\n    )\n}\n\n\nexport default FieldArrayComponent;","import React from 'react'\nimport { Field, FieldArray } from 'redux-form'\nimport TextInput from '../../../misc/forms/inputs/TextInput'\nimport { Button, ButtonGroup } from 'reactstrap';\n\n\nfunction FieldArrayComponent(props) {\n\n\n\n    const renderItems = ({ fields }) => {\n\n        return (\n\n\n\n            <div className=\"container my-3 py-3 \">\n\n\n\n\n                <ul\n                    style={{\n                        listStyle: 'none'\n                    }}\n\n\n\n                >\n                    <button\n                        className=\"btn  btn-sm btn-primary\"\n                        onClick={() => { fields.push('') }}\n                        type=\"button\"\n                    \n\n                    >\n                        click to add phone number\n                </button>\n\n\n                    {fields.map((member, index) =>\n                        <li key={index}\n                            className=\"\"\n                        >\n                            <Button close onClick={() => fields.remove(index)}>\n\n                            </Button>\n                            <div className=\"container card my-3 py-2 \">\n\n                                <Field\n                                    name={`${member}`}\n                                    type=\"text\"\n                                    component={TextInput}\n                                    placeholder=\"click to add phone number\"\n                                    styleFrom={{\n                                        color: 'black'\n\n                                    }}\n\n                                />\n\n\n                            </div>\n\n                        </li>\n                    )}\n                </ul>\n\n\n\n            </div>)\n\n\n\n    }\n\n\n    return (\n        <div>\n\n            <FieldArray name={`phone`} component={renderItems} />\n        </div>\n    )\n}\n\n\nexport default FieldArrayComponent;","\nimport React, { Component } from 'react'\nimport { reduxForm, Field } from 'redux-form'\nimport TextArea from '../../../misc/forms/inputs/TextArea'\nimport TextInput from '../../../misc/forms/inputs/TextInput'\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport Emails from './emails'\nimport Phones from './phones'\n\n\nclass Form extends Component {\n\n\n\n\n\n\n\n    render() {\n\n        const { handleSubmit, submitCallBack, selectRegion,\n            selectCountry, country, region } = this.props;\n\n        console.log(this.props.initialValues)\n\n\n        return (\n            <div\n                className=\"container my-3 py-3\"\n            >\n\n                <form\n                    onSubmit={handleSubmit(submitCallBack)}\n\n                >\n\n\n\n                    <div className=\"col-12\">\n                        <Field\n                            component={TextInput}\n                            name=\"company\"\n                            placeholder=\"company\"\n                            type=\"text\"\n                        />\n\n                    </div>\n                    <div className=\"row my-2 py-2\">\n\n                        <div className=\"col-lg-6 col-md-6\">\n\n                            <Field\n                                component={TextArea}\n                                name=\"address.line1\"\n                                placeholder=\"line 1\"\n                                type=\"text\"\n                            />\n                        </div>\n                        <div className=\"col-lg-6 col-md-6\">\n\n                            <Field\n                                component={TextArea}\n                                name=\"address.line2\"\n                                placeholder=\"line 2\"\n                            />\n                        </div>\n                        <div className=\"col-lg-4 col-md-4\">\n\n\n                        </div>\n\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-lg-6 col-sm-12 mb-2\">\n\n\n                            <CountryDropdown\n                                value={country}\n                                onChange={(val) => selectCountry(val)}\n                                classes=\"custom-select\"\n                            />\n\n                        </div>\n                        <div className=\"col-lg-6 col-sm-12\">\n\n                            <RegionDropdown\n                                country={country}\n                                value={region}\n                                onChange={(val) => selectRegion(val)}\n                                classes=\"custom-select\"\n                                showDefaultOption={true}\n                            />\n\n\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n\n                        <div className=\"col-md-6 col-lg-6\">\n                            <Emails />\n                        </div>\n                        <div className=\"col-md-6 col-lg-6\">\n                            <Phones />\n                        </div>\n\n                    </div>\n                    <h5 className=\"text-center\">Stripe Payment</h5>\n                    <div className=\"row\">\n\n\n                        <div className=\"col-md-6 col-lg-6\">\n                            <Field\n                                component={TextInput}\n                                name=\"stripe.publicId\"\n                                placeholder=\"stripe public id\"\n\n                            />\n                        </div>\n                        <div className=\"col-md-6 col-lg-6\">\n                            <Field\n                                component={TextInput}\n                                name=\"stripe.secretId\"\n                                placeholder=\"stripe secret id\"\n\n\n                            />\n                        </div>\n\n                    </div>\n\n\n                    <button className=\"btn btn-outline-warning btn-block\">\n                        Edit Profile\n                    </button>\n                </form>\n\n            </div>\n        )\n    }\n}\n\n\n\nexport default reduxForm({\n    form: 'create-profile'\n})(Form);","import React, { Component } from 'react'\nimport FormComp from './Form/Form'\nimport { connect } from 'react-redux'\nimport { isEmpty } from '../../../utils/isEmpty'\nimport { createProfile } from '../../../actions/boards/boards'\n\nclass index extends Component {\n\n\n    componentDidMount() {\n\n    }\n\n\n    state = {\n        country: 'Tunisia',\n        region: 'Tunis',\n\n    }\n\n    submitHandler = (data) => {\n\n\n        let dataTosend = {\n            address: {\n                line1: data.address.line1,\n                line2: data.address.line2,\n                country: this.state.country,\n                region: this.state.region\n            },\n            stripe: data.stripe,\n            phone: data.phone,\n            email: data.email,\n            company: data.company\n        }\n\n        console.log(data._id)\n        this.props.createProfile(data._id, dataTosend)\n\n\n    }\n    selectCountry = (val) => {\n\n        this.setState({ country: val });\n    }\n\n    selectRegion = (val) => {\n        this.setState({ region: val });\n    }\n\n    render() {\n\n\n\n\n\n        return (\n\n\n\n            <div\n                className=\"container\"\n\n            >\n\n                <h4 className=\"text-center display-4\">Agency Profile</h4>\n\n                <p className=\"text-center \">this is profile information which will show on your display boards so that advertisers or users can contact you </p>\n\n                <FormComp\n                    submitCallBack={this.submitHandler}\n                    initialValues={this.props.owner}\n                    selectCountry={(val) => { this.selectCountry(val) }}\n                    selectRegion={(val) => { this.selectRegion(val) }}\n                    country={this.state.country}\n                    region={this.state.region}\n                />\n\n\n\n            </div>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => ({\n\n    owner: !isEmpty(state.owner) ? state.owner.owner : null\n})\n\nconst mapDispatchToProps = {\n    createProfile\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(index);","\nimport React from 'react'\nimport { reduxForm, Field } from 'redux-form'\nimport TextInput from '../../../misc/forms/inputs/TextInput'\n\n\n\n\nfunction Form({\n    handleSubmit,\n    submitCallBack\n}) {\n\n\n\n\n\n\n    return (\n\n\n\n        <form\n\n            onSubmit={handleSubmit(submitCallBack)}\n\n        >\n\n            <div className=\"container\">\n                <div className=\"row\">\n\n                    <div className=\"col-md-4 col-lg-4\">\n\n                        <Field\n                            component={TextInput}\n                            name=\"username\"\n                            type=\"text\"\n\n                        />\n                    </div>\n                    <div className=\"col-md-4 col-lg-4\">\n\n                        <Field\n                            component={TextInput}\n                            name=\"email\"\n                            type=\"text\"\n\n                        />\n                    </div>\n                    <div className=\"col-md-4 col-lg-4\">\n\n                        <Field\n                            component={TextInput}\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"enter new password\"\n                        />\n                    </div>\n\n                </div>\n\n\n                <button\n\n                    type=\"submit\"\n                    className=\"btn btn-block btn-outline-primary\"\n\n                >\n\n                    Change\n\n                </button>\n            </div>\n\n\n        </form>\n    )\n}\n\n\n\n\nexport default reduxForm({\n    form: 'edit-user'\n})(Form);","\nimport React, { Component } from 'react'\nimport moment from 'moment'\nimport { getTotalIncomes } from '../../../../utils/isEmpty'\n\n\n\n\n\nclass index extends Component {\n\n\n\n    getTotalIncomeFromInvoices = () => {\n\n        const { invoices } = this.props\n\n        if (this.props.invoices && this.props.invoices.length > 0) {\n\n            return (<span>\n                $ {getTotalIncomes(invoices)}\n            </span>)\n\n        } else {\n            return (<span> $ 0</span>)\n        }\n\n    }\n\n    renderInvoices = () => {\n\n        if (this.props.invoices && this.props.invoices.length > 0) {\n\n\n            return this.props.invoices.map((invoice) => {\n\n                return (\n                    <div className=\"col-12 my-2 py-2\">\n                        <div className=\"card shadow\">\n\n                            <div className=\"card-header\">\n                                <h4 className=\"\">\n                                    Income :    ${invoice.amount}\n                                </h4>\n\n                            </div>\n\n                            <div className=\"card-title p-2 m-2\">\n\n                                From Advertiser :     {invoice.advertiser.company}\n                            </div>\n                            <div className=\"card-title p-2 m-2\">\n\n                                Received at  :     {moment(invoice.createdAt).format('DD MM YYYY')}\n                            </div>\n\n\n                        </div>\n                    </div>\n                )\n\n            })\n\n\n\n\n        } else {\n\n\n            return (<div className=\"container text-center\">\n                <h4>No Invoices yet</h4>\n            </div>)\n        }\n\n    }\n\n    render() {\n\n\n\n\n\n        return (\n            <div className=\"container my-2 py-2\">\n                <h4>Total Incomes : {this.getTotalIncomeFromInvoices()}</h4>\n                {\n                    this.renderInvoices()\n                }\n            </div>\n        )\n    }\n}\n\n\n\n\n\n\n\nexport default index;","\nimport React, { Component } from 'react'\nimport FormComp from './Form/Form'\nimport { connect } from 'react-redux'\nimport { getInvoices } from '../../../actions/boards/boards'\nimport Incomes from './incomes'\n\nclass index extends Component {\n\n\n    componentDidMount() {\n\n    }\n\n    submitHandler = (data) => {\n\n        this.props.editUser(data)\n\n    }\n\n\n\n    render() {\n\n        let username, email;\n\n        if (this.props.user) {\n            username = this.props.user.username;\n            email = this.props.user.email;\n        }\n\n        console.log(this.props.user)\n        return (\n            <div className=\"container\">\n\n                <h5 className=\"text-center display-4\">User Account of Owner</h5>\n\n                <div className=\"my-3 py-3\">\n                    <FormComp\n                        submitCallBack={this.submitHandler}\n                        initialValues={{ email, username }}\n\n                    />\n\n                </div>\n\n                <h5 className=\"text-center display-4\">Incomes from your boards</h5>\n\n                <Incomes\n                    invoices={this.props.owner.invoices}\n                />\n\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    owner: state.owner ? state.owner.owner : null\n})\n\n\n\nexport default connect(mapStateToProps)(index);","\n\nimport React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport TextArea from '../../../misc/forms/inputs/TextArea'\n\n\n\nfunction Form({\n    handleSubmit,\n    submitCallBack\n}) {\n\n\n\n    return (\n        <form\n            onSubmit={handleSubmit(submitCallBack)}\n\n        >\n\n\n            <div className=\"row my-2 py-2 card shadow mx-2 px-2\" >\n\n                <div className=\"col-md-9\">\n                    <Field\n                        component={TextArea}\n                        name=\"message\"\n                        placeholder=\"your message\"\n\n                    />\n\n                </div>\n\n                <div className=\"col-md-3\">\n                    <button className=\"btn\" type=\"submit\" style={{\n                        backgroundImage: `radial-gradient(circle 248px at center, #F7AA97 0%, #F7AA97  47%, #F7AA97 100%)`,\n                        color: `#fff`\n                    }}>\n\n\n                        Send\n\n                    </button>\n                </div>\n\n\n            </div>\n\n\n\n        </form>\n    )\n}\n\n\n\n\nexport default reduxForm({\n    form: 'create-message'\n})(Form);","import React, { Component } from 'react'\nimport styles from './MessageBox.module.css'\nimport Form from './Form'\n\n\n\nclass MessageBox extends Component {\n\n\n    submitHandler = (data) => {\n\n        console.log('currentUser', this.props.currentUser)\n        console.log('currentRoon', this.props.currentRoom)\n        if (this.props.currentRoom && this.props.currentUser) {\n            this.props.sendMessage(this.props.currentUser, this.props.currentRoom, data)\n        }\n\n    }\n\n    render() {\n\n\n\n        return (\n            <div className={`${styles.messageBoxWrapper} m-2 p-2`}>\n\n\n                <Form\n                    submitCallBack={this.submitHandler}\n\n                />\n\n\n\n\n            </div>\n        )\n    }\n}\n\n\n\n\nexport default MessageBox;","import React, { Component } from 'react'\nimport styles from './ChatLists.module.css'\nimport moment from 'moment'\n\n\n\nclass ChatLists extends Component {\n\n\n\n\n    renderMessages = () => {\n\n        const { messages, owner } = this.props;\n        // const rightDiv = ``\n        // const rightImg = `${styles.imgRight}`\n\n        if (messages.length > 0) {\n\n            return messages.map((message) => {\n\n                if (owner) {\n\n                    if (message.senderId === owner._id) {\n\n\n                        return (\n                            <div className={`${styles.container}`}>\n                                <img src=\"https://via.placeholder.com/150\" alt=\"Avatar\" />\n                                <p>{message.text}</p>\n                                <span className={`${styles.timeRight}`}>{moment(message.updatedAt).format('DD MM YYYY H A')}</span>\n                            </div>\n                        )\n\n\n                    } else {\n\n                        return (\n                            <div className={`${styles.container} ${styles.darker}`}>\n                                <img src=\"https://via.placeholder.com/150\" alt=\"Avatar\" className={`${styles.imgRight}`} />\n                                <p>{message.text}</p>\n                                <span className={`${styles.timeLeft}`}>{moment(message.updatedAt).format('DD MM YYYY H A')}</span>\n                            </div>\n                        )\n\n\n                    }\n\n\n\n                }\n\n\n\n            })\n        } else {\n            return (\n                <div className=\"text-center my-2 py-2\">\n                    <h4>Loading messages wait a moment or there are no messages at all.</h4>\n                </div>\n            )\n\n        }\n\n\n\n    }\n\n    render() {\n\n\n\n\n        return (\n\n\n            <div\n                className={`${styles.ListsWrapper} my-2 py-2 card mx-2 px-2`}\n            >\n                <div className=\"card-header\">\n\n                    <h5 className=\"text-center\">{this.props.schedule.advertiser.company || 'advertiser'}</h5>\n                </div>\n                {this.renderMessages()}\n\n\n            </div>\n        )\n    }\n}\n\n\n\n\nexport default ChatLists;","\nimport React, { Component } from 'react'\nimport MessageBox from './MessageBox/MessageBox'\nimport ChatList from './ChatLists/ChatLists'\nimport styles from './index.module.css'\nimport { connect } from 'react-redux'\nimport { isEmpty } from '../../../utils/isEmpty'\nimport { connectToChat, isRoomExist, sendMessage } from '../../../actions/userActions'\n\nclass index extends Component {\n\n\n    state = {\n        messages: [],\n        currentRoom: null,\n        currentUser: null,\n        isLoading: true\n\n    }\n\n    connectToRoom = (id, currentUser) => {\n        // const { currentUser } = this.state;\n        console.log('id', id)\n        console.log('currentUser', currentUser)\n        return currentUser\n            .subscribeToRoom({\n                roomId: `${id}`,\n                messageLimit: 100,\n                hooks: {\n                    onMessage: message => {\n\n\n                        this.setState({\n                            messages: [...this.state.messages, message]\n                        });\n                    }\n                }\n            })\n            .then(currentRoom => {\n                this.setState({\n                    currentRoom\n                });\n            });\n    }\n\n    componentDidMount() {\n\n\n\n        if (this.props.owner && this.props.schedule) {\n            this.props.connectToChat({ id: this.props.owner._id, name: this.props.schedule.advertiser.company || 'advertiser' }, this.props.schedule._id, (currentUser, exist) => {\n\n                // currentUser.fetchMultipartMessages({\n                //     roomId: this.props.schedule._id,\n                //     initialId: 42,\n                //     direction: 'older',\n                //     limit: 10,\n                // })\n                //     .then(messages => {\n                //         this.setState({\n                //             messages: messages\n                //         })\n                //     })\n                //     .catch(err => {\n                //         console.log(`Error fetching messages: ${err}`)\n                //     })\n\n                this.setState({\n                    currentUser: currentUser\n                })\n\n                if (exist.exist) {\n\n                    if (currentUser.id === this.props.owner._id) {\n                        console.log('same account')\n                        this.connectToRoom(exist.roomId, currentUser)\n\n                    } else {\n                        console.log('different account')\n                        return currentUser.addUserToRoom({\n                            userId: this.props.owner._id,\n                            roomId: exist.roomId\n                        })\n                            .then(() => {\n                                this.connectToRoom(exist.roomId, currentUser)\n                            })\n\n                    }\n\n\n\n                } else {\n                    return currentUser\n                        .createRoom({\n                            name: this.props.schedule._id,\n                            id: this.props.schedule._id\n                        })\n                        .then(room => this.connectToRoom(room.id, currentUser))\n\n\n                }\n\n\n\n\n\n            })\n\n\n\n        }\n\n\n\n    }\n\n\n    render() {\n\n\n\n\n        return (\n\n\n\n            <div className={`${styles.ChatBoxWrapper}`}>\n\n                <div>\n\n                    <ChatList\n                        messages={this.state.messages}\n                        schedule={this.props.schedule}\n                        owner={this.props.owner}\n                    />\n                </div>\n\n                <div className=\"position-relative\">\n                    <MessageBox\n                        sendMessage={this.props.sendMessage}\n                        currentUser={this.state.currentUser}\n                        currentRoom={this.state.currentRoom}\n\n                    />\n                </div>\n\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    owner: !isEmpty(state.owner) ? state.owner.owner : null,\n    schedule: !isEmpty(state.board) ? state.board.schedule : null\n})\n\nconst mapDispatchToProps = {\n    connectToChat,\n    isRoomExist,\n    sendMessage\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(index);","import React, { Component } from 'react'\nimport Slider from \"react-slick\";\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nconst settings = {\n\n\n    speed: 1500,\n    autoplaySpeed: 2000,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    autoplay: true,\n    dots: true,\n\n\n    responsive: [\n\n        {\n            breakpoint: 600,\n            settings: {\n                slidesToShow: 3,\n                slidesToScroll: 3,\n                initialSlide: 3\n            }\n        },\n        {\n            breakpoint: 480,\n            settings: {\n                slidesToShow: 1,\n                slidesToScroll: 1\n            }\n        }\n    ]\n};\n\n\n\nclass index extends Component {\n\n\n\n\n\n    renderTodayAds = () => {\n\n\n        const { todaySchedules } = this.props;\n\n        console.log('today schedules', todaySchedules)\n\n        if (todaySchedules && todaySchedules.length > 0) {\n\n\n            return todaySchedules.map((schedule, index) => {\n\n\n\n\n\n\n\n                return (\n                    <div className=\"col-md-4 my-2 py-2\">\n\n                        <div className=\"card\">\n                            <div class=\"card-header text-center\">\n\n                                {schedule.advert.name}\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className=\"card-title\">\n\n                                    info :  {schedule.advert.note}\n\n                                </div>\n\n\n                            </div>\n                            <ul class=\"list-group list-group-flush\">\n                                <li class=\"list-group-item\">      Board :   {schedule.board.name}</li>\n                                <li class=\"list-group-item\">End in : {moment(schedule.to).format('DD MM YYYY')}</li>\n                                <li class=\"list-group-item\">Advertiser : {schedule.advertiser.company}</li>\n                                <li class=\"list-group-item\">\n\n                                    {/* <button\n                                        className=\"btn \"\n                                        style={{\n                                            borderRadius: '10px',\n                                            backgroundImage: `linear-gradient(120deg, #f6d365 0%, #fda085 100%)`,\n                                            color: '#fff'\n                                        }}\n                                    >\n\n                                        Check Stats of ads\n                                        </button> */}\n                                </li>\n                            </ul>\n\n\n\n                        </div>\n\n                    </div>\n\n                )\n            })\n\n\n\n        } else {\n\n\n            return (\n                <div className=\"container\">\n\n                    <p className=\"text-center\">No Running Ads Today. </p>\n\n                </div>\n            )\n\n\n\n        }\n\n\n\n\n    }\n\n\n\n\n\n\n    render() {\n\n\n\n\n\n\n\n        return (\n\n\n\n\n            <div className=\"container\">\n\n\n                <h5 className=\"display-4 text-center\">Today Running Ads | {moment(Date.now()).format('DD MM YYYY')}</h5>\n\n                {this.renderTodayAds()}\n            </div>\n        )\n    }\n}\n\n\n\n\nexport default index;","import React from 'react'\n\n\n\n\n\n\nconst SelectInput = ({ options, value, onChange, title, placeholder }) => {\n\n\n\n\n    return (\n\n\n        <div className=\"form-group mb-3\">\n\n\n\n            <select\n                className=\"custom-select\"\n                value={value}\n                onChange={(e) => {\n                    onChange(e.target.value)\n                    console.log(e.target.value)\n                }}\n                placeholder={placeholder}\n                options={options}\n            >\n                <option>Select {title}</option>\n                {options.map((option) => {\n                    return (\n                        <option value={option.value} >{option.key}</option>\n                    )\n                })}\n\n            </select>\n\n\n\n\n        </div>\n\n\n    )\n}\n\nexport default SelectInput;","import { SCHEDULES_BY, ASYNC_ACTION_START, ASYNC_ACTION_FINISH, TODAY_SCHEDULES } from './types'\nimport authService from '../services/authService'\nimport axiosService from '../services/axiosService'\nimport { asyncActionStart, asyncActionFinish, asyncActionError } from './asyncActions'\nimport toastr from 'react-redux-toastr'\nimport axios from 'axios'\nimport { push } from 'connected-react-router'\nimport { endpoint, prodEndpoint } from '../config'\nconst URL = process.env.NODE_ENV === 'development' ? endpoint : prodEndpoint\nconst axiosInstance = axiosService.getInstance();\n\n\n\nexport const todaySchedules = (ownerId) => {\n\n\n\n    return (dispatch) => {\n\n        axiosInstance.post(`/schedules/now`, { type: 'owner', ownerId })\n            .then((response) => {\n\n                dispatch({\n                    type: TODAY_SCHEDULES,\n                    payload: response.data.schedules\n                })\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n\n    }\n\n\n\n}\n\n\n\nexport const getSchedulesBy = (actor, group) => {\n\n\n\n    return (dispatch) => {\n\n\n        axiosInstance.post(`/schedules/get`, { actor, group })\n            .then((response) => {\n\n                dispatch({\n                    type: SCHEDULES_BY,\n                    payload: response.data\n                })\n            })\n\n\n    }\n\n\n\n\n\n\n}","import React, { Component } from 'react'\nimport moment from 'moment'\nimport styles from './index.module.css'\n\n\n\n\n\nclass index extends Component {\n\n\n\n\n\n\n    renderAdvertLists = (schedules) => {\n\n\n\n        return (\n\n            <div className=\"row\">\n\n\n\n                {\n                    schedules.map((schedule, index) => {\n\n\n\n\n\n\n\n                        return (\n                            <div className=\"col-md-4 my-2 py-2\">\n\n                                <div className=\"card\">\n                                    <div class=\"card-header text-center\">\n\n                                        {schedule.advert.name}\n                                    </div>\n\n                                    <div className=\"card-body\">\n                                        <div className=\"card-title\">\n\n                                            info :  {schedule.advert.note}\n\n                                        </div>\n\n\n                                    </div>\n                                    <ul class=\"list-group list-group-flush\">\n                                        <li class=\"list-group-item\">      Board :   {schedule.board.name}</li>\n                                        <li class=\"list-group-item\">End in : {moment(schedule.to).format('DD MM YYYY')}</li>\n                                        <li class=\"list-group-item\">Advertiser : {schedule.advertiser.company}</li>\n                                        <li class=\"list-group-item\">\n\n                                            {/* <button\n                                                className=\"btn \"\n                                                style={{\n                                                    borderRadius: '10px',\n                                                    backgroundImage: `linear-gradient(120deg, #f6d365 0%, #fda085 100%)`,\n                                                    color: '#fff'\n                                                }}\n                                            >\n\n                                                Check Stats of ads\n                                                </button> */}\n                                        </li>\n                                    </ul>\n\n\n\n                                </div>\n\n                            </div>\n\n                        )\n                    })\n                }\n\n\n\n\n\n            </div>\n\n        )\n\n\n    }\n\n\n\n\n    renderAdvert = () => {\n\n        const { schedules } = this.props;\n        let toArr = [];\n\n        if (schedules) {\n            for (const prop in schedules) {\n\n\n                toArr.push({ name: prop, arrTo: schedules[prop] })\n\n\n\n            }\n\n\n            return toArr.map((arr) => {\n\n\n                return (\n                    <div className=\"container\">\n                        <div className=\"my-3 py-3\">\n\n                            <span className={`${styles.dateSpan}`}>{moment(arr.name).format('DD MM YYYY')}</span>\n                        </div>\n\n\n                        {this.renderAdvertLists(arr.arrTo)}\n                    </div>\n                )\n\n\n            })\n\n\n\n\n\n\n\n        } else {\n\n\n            return (\n                <div>\n                    <h4>Loading please wait </h4>\n                </div>\n            )\n\n\n        }\n\n\n\n\n\n\n\n\n    }\n\n\n    render() {\n\n\n\n        console.log('schedules date', this.props.schedules)\n\n\n\n\n\n\n\n\n        return (\n\n            <div className=\"container\">\n\n                <h4 className=\"text-center\">By Date</h4>\n\n\n                {this.renderAdvert()}\n            </div>\n        )\n    }\n}\n\n\n\n\n\nexport default index;","\nimport React, { Component } from 'react'\nimport moment from 'moment'\nimport styles from '../groupDate/index.module.css'\n\n\n\n\n\nclass index extends Component {\n\n\n\n\n\n\n    renderAdvertLists = (schedules) => {\n\n\n\n        return (\n\n            <div className=\"row\">\n\n\n\n                {\n                    schedules.map((schedule, index) => {\n\n\n\n\n\n\n\n                        return (\n                            <div className=\"col-md-4 my-2 py-2\">\n\n                                <div className=\"card\">\n                                    <div class=\"card-header text-center\">\n\n                                        {schedule.advert.name}\n                                    </div>\n\n                                    <div className=\"card-body\">\n                                        <div className=\"card-title\">\n\n                                            info :  {schedule.advert.note}\n\n                                        </div>\n\n\n                                    </div>\n                                    <ul class=\"list-group list-group-flush\">\n                                        <li class=\"list-group-item\">    Start :   {moment(schedule.from).format('DD MM YYYY')}</li>\n                                        <li class=\"list-group-item\">End in : {moment(schedule.to).format('DD MM YYYY')}</li>\n                                        <li class=\"list-group-item\">Advertiser : {schedule.advertiser.company}</li>\n                                        <li class=\"list-group-item\">\n\n                                            {/* <button\n                                                className=\"btn \"\n                                                style={{\n                                                    borderRadius: '10px',\n                                                    backgroundImage: `linear-gradient(120deg, #f6d365 0%, #fda085 100%)`,\n                                                    color: '#fff'\n                                                }}\n                                            >\n\n                                                Check Stats of ads\n                                                </button> */}\n                                        </li>\n                                    </ul>\n\n\n\n                                </div>\n\n                            </div>\n\n                        )\n                    })\n                }\n\n\n\n\n\n            </div>\n\n        )\n\n\n    }\n\n\n\n\n    renderAdvert = () => {\n\n        const { schedules } = this.props;\n        let toArr = [];\n\n        if (schedules) {\n            for (const prop in schedules) {\n\n\n                toArr.push({ name: prop, arrTo: schedules[prop] })\n\n\n\n            }\n\n\n            return toArr.map((arr) => {\n\n\n                return (\n                    <div className=\"container\">\n                        <div className=\"my-3 py-3\">\n\n                            <span className={`${styles.dateSpan}`}>{arr.name}</span>\n                        </div>\n\n\n                        {this.renderAdvertLists(arr.arrTo)}\n                    </div>\n                )\n\n\n            })\n\n\n\n\n\n\n\n        } else {\n\n\n            return (\n                <div>\n                    <h4>Loading please wait </h4>\n                </div>\n            )\n\n\n        }\n\n\n\n\n\n\n\n\n    }\n\n\n    render() {\n\n\n\n\n\n\n\n\n\n\n\n\n        return (\n\n            <div className=\"container\">\n\n                <h4 className=\"text-center\">By Board</h4>\n\n\n                {this.renderAdvert()}\n            </div>\n        )\n    }\n}\n\n\n\n\n\nexport default index;","\nimport React, { Component } from 'react'\nimport Today from './today'\nimport { Divider } from '@material-ui/core'\nimport SelectInput from '../misc/forms/inputs/SelectInputWO'\nimport styles from './index.module.css'\nimport { connect } from 'react-redux'\nimport { getSchedulesBy, todaySchedules } from '../../actions/schedules'\nimport { isEmpty } from '../../utils/isEmpty'\nimport DateRender from './groupDate'\nimport BoardRender from './groupBoard'\n\nclass index extends Component {\n\n\n    state = {\n\n        group: 'board'\n\n    }\n\n    componentDidMount() {\n\n\n\n        this.props.getSchedulesBy({ type: 'owner', _id: this.props.owner._id }, this.state.group)\n        this.props.todaySchedules(this.props.owner._id)\n    }\n\n\n\n    onGroupChange = (value) => {\n\n\n        this.setState({\n            group: value\n        }, () => {\n            this.props.getSchedulesBy({ type: 'owner', _id: this.props.owner._id }, this.state.group)\n        })\n\n    }\n\n\n\n    boardSchedules = () => {\n\n\n        return (<BoardRender schedules={this.props.schedules ? this.props.schedules : null} />)\n    }\n\n\n    dateSchedules = () => {\n        return (<DateRender schedules={this.props.schedules ? this.props.schedules : null} />)\n\n    }\n\n\n\n    renderGroupedSchedules = () => {\n\n        switch (this.state.group) {\n\n\n            case 'board':\n\n                return this.boardSchedules()\n\n\n                break;\n\n            case 'date':\n\n                return this.dateSchedules()\n\n\n                break;\n\n\n            default:\n                break;\n        }\n\n\n\n\n    }\n\n\n\n    render() {\n        console.log(this.props.schedules)\n        const options = [\n            {\n                key: 'Group by Date',\n                value: 'date'\n            },\n            {\n                key: 'Group by Board',\n                value: 'board'\n            },\n\n        ]\n\n\n\n\n\n        return (\n\n\n            <div className=\"container-fluid\">\n\n                <Today\n                    todaySchedules={this.props.today || []}\n                />\n                <Divider />\n\n\n                <div className=\"my-3 py-3\">\n                    <SelectInput\n\n                        options={options || []}\n                        value={this.state.group}\n                        onChange={this.onGroupChange}\n                        title=\"group\"\n                        placeholder=\"choose group\"\n                    />\n                </div>\n\n                <div className=\"my-3 py-3 text-center\">\n\n\n                    <span className={`${styles.totalSpan}`}> {this.props.totalItems || 0}  ads  running in your boards</span>\n\n\n\n\n\n\n                </div>\n\n\n                {this.renderGroupedSchedules()}\n\n\n            </div>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    owner: state.owner.owner || null,\n    schedules: !isEmpty(state.schedules.schedules) ? state.schedules.schedules.schedules : null,\n    totalItems: !isEmpty(state.schedules.schedules) ? state.schedules.schedules.totalItems : null,\n    today: !isEmpty(state.schedules.today) ? state.schedules.today : null\n})\n\nconst mapDispatchToProps = {\n    getSchedulesBy,\n    todaySchedules\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(index);","import React, { Component, Fragment } from 'react'\nimport { Switch, Route, NavLink, Link, withRouter } from 'react-router-dom'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport MessengerCustomerChat from 'react-messenger-customer-chat';\nimport styles from './routes.module.css'\nimport Authenticated from './components/misc/auth/Authenticated'\nimport ModalManager from './components/misc/modalManager/modalManager';\nimport NotFound from './components/NotFound'\nimport { trackGoogleAnalytics } from './services/ga/ga'\nimport SideBar from './components/navigation/sidebar/index'\nimport { logoutUser, auth } from './actions/userActions'\nimport { connect } from 'react-redux'\nimport { getBoards, getOwner, editUser, getAdsRequested } from './actions/boards/boards'\nimport LoadingComponent from './components/misc/Loading/LoadingComponent'\nimport Home from './components/landing/Home'\nimport Spots from './components/spots'\nimport Requests from './components/ads'\nimport Profile from './components/profile/company/index'\nimport Account from './components/profile/account'\nimport Chats from './components/ads/chat'\nimport Schedules from './components/schedules'\nimport { isEmpty } from './utils/isEmpty'\n\n\nclass Routes extends React.Component {\n\n\n\n  state = {\n    dropdownOpen: false,\n    direction: false,\n    changeStyle: false\n  }\n\n\n  componentDidMount = () => {\n    window.ga('create', '', 'auto');\n    this.props.auth()\n    this.props.getBoards()\n    this.props.getOwner()\n\n\n\n\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  onMouseEnter = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  onMouseLeave = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  changeWidth = () => {\n    this.setState(prevState => ({\n      changeStyle: !prevState.changeStyle\n    }));\n  }\n  changeDirection = () => {\n    this.setState(prevState => ({\n      direction: !prevState.direction\n    }));\n  }\n\n\n  logoutUser = () => {\n    this.props.logoutUser()\n  }\n\n\n  renderSettingBar = () => {\n\n    return (\n\n      <Dropdown isOpen={this.state.dropdownOpen}\n        toggle={this.toggle}\n        onMouseEnter={\n          () => {\n            setTimeout(() => {\n              this.onMouseEnter()\n            }, 200);\n          }\n        }\n        onMouseLeave={this.onMouseLeave} >\n        <DropdownToggle nav>\n          <a className=\"nav-link nav-link-icon \" href=\"#\" id=\"navbar-default_dropdown_1\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" >\n            <i className=\"ni ni-circle-08\" style={{ fontSize: '36px', color: 'white', }}></i>\n            <span className=\"nav-link-inner--text d-lg-none\">Advertiser</span>\n          </a>\n        </DropdownToggle>\n\n        <DropdownMenu>\n\n\n          <DropdownItem>\n            <button\n              className=\"dropdown-item\"\n              onClick={this.logoutUser}\n            >LogOut</button>\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    )\n  }\n\n\n  renderMainContents = () => {\n    let sidebarWidth = '2';\n    let topbarWidth = '10'\n    let iconDirection = 'left'\n\n    if (this.state.changeStyle) {\n      sidebarWidth = '1';\n      topbarWidth = '11'\n    }\n\n    if (this.state.direction) {\n      iconDirection = 'right'\n    }\n\n    return (\n      <Fragment>\n        <nav className=\"navbar\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className={` col-xl-${sidebarWidth} ${styles.sidebar} fixed-top`}>\n                <SideBar\n                  changeStyle={this.state.changeStyle}\n\n                />\n              </div>\n\n              <div className={`col-xl-${topbarWidth} col-lg-11  ml-auto  fixed-top`}\n                style={{\n\n                  backgroundImage: `radial-gradient(circle 248px at center, #9B8281 0%, #9B8281  47%, #9B8281 100%)`\n                }}\n\n              >\n\n                <div className=\"d-flex\">\n                  <div className=\"mr-auto p-3 \">\n                    <a\n                      style={{ color: '#fff', cursor: 'pointer' }}\n                      onClick={\n                        () => {\n                          this.changeWidth()\n                          this.changeDirection()\n\n                        }\n                      }\n                    >\n                      <i className={` ni ni-bold-${iconDirection}`} style={{ fontSize: '25px' }}></i>\n                    </a>\n\n                  </div>\n                  <span\n                    className=\"p-3\"\n                    style={{\n                      color: '#fff'\n                    }}\n                  >\n\n                    {\n                      this.props.owner ? this.props.owner.company : 'no company name'\n                    }\n                  </span>\n\n\n                  {this.renderSettingBar()}\n\n\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </nav>\n\n        <ModalManager />\n\n        <section className=\"py-4 my-4\">\n\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n\n              <div className={`col-xl-${topbarWidth} col-lg-10 ml-auto`}>\n                <Switch>\n                  <Route exact path=\"/\" render={(props) => (<Home />)} />\n                  <Route path=\"/spots\" render={(props) => (<Spots />)} />\n                  <Route path=\"/ads\" render={(props) => (<Requests />)} />\n                  <Route path=\"/profile\" render={(props) => (<Profile />)} />\n                  <Route path=\"/chat\" render={(props) => (<Chats />)} />\n                  <Route path=\"/schedules\" render={(props) => (<Schedules />)} />\n                  <Route path=\"/account\" render={(props) => (<Account user={this.props.user} editUser={this.props.editUser} />)} />\n\n\n                </Switch>\n                <MessengerCustomerChat\n          pageId=\"836186800088732\"\n          appId=\"1349261215239476\"\n          htmlRef=\"\"\n        />\n              </div>\n\n            </div>\n\n          </div>\n\n\n        </section>\n      </Fragment>\n    )\n\n  }\n\n  renderUnAuthenticated = () => {\n\n    return (\n      <div\n\n      >\n        <LoadingComponent />\n\n      </div>\n    )\n\n  }\n\n  render() {\n\n\n\n    trackGoogleAnalytics(this.props.location)\n\n\n\n    return this.props.isAuth && this.props.isAuth ? this.renderMainContents() : this.renderUnAuthenticated()\n\n  }\n\n\n}\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.user.userData ? state.user.userData.isAuth : null,\n  user: (state.user.userData && state.user.userData.isAuth) ? state.user.userData.owner.user : null,\n  owner: (state.user.userData && state.user.userData.isAuth) ? state.user.userData.owner : null,\n\n})\n\nconst mapDispatchToProps = {\n  logoutUser,\n  auth,\n  getBoards, getOwner,\n  editUser,\n\n}\n\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Routes));","\nconst setPageAndSendToGA = url => {\n    window.ga('set', 'page', url);\n    window.ga('send', 'pageview');\n};\n\nexport const trackGoogleAnalytics = location => {\n    if (window.ga) {\n        if (location.pathname == '/sign-up') {\n            let url = location.pathname;\n            this.setPageAndSendToGA(url);\n        }\n\n        if (location.search.length == 10) {\n\n            // here we are using search Params, so we concat it to the url string\n\n            let url = location.pathname + location.search;\n            this.setPageAndSendToGA(url);\n        }\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, ReactReduxContext } from 'react-redux'\nimport { configureStore } from './store'\nimport './index.css';\nimport Routes from './routes'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { ConnectedRouter } from 'connected-react-router'\nimport ReduxToastr from 'react-redux-toastr'\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css'\n\nconst store = configureStore().store;\n\n\n\n\n\nReactDOM.render(\n\n        <Provider store={store} >\n                <ConnectedRouter history={configureStore().history}>\n\n\n                        <div>\n                                <ReduxToastr\n                                        position=\"bottom-right\"\n                                        transitionIn=\"fadeIn\"\n                                        transitionOut=\"fadeOut\"\n\n                                />\n                                <Routes />\n\n                        </div>\n\n\n\n\n                </ConnectedRouter>\n\n        </Provider>\n\n\n\n\n        , document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}